Search.setIndex({"alltitles": {"Arithmetic": [[4, "arithmetic"]], "Backtracking": [[4, "backtracking"]], "Basic algorithms and data structures": [[4, "basic-algorithms-and-data-structures"]], "Coin change": [[1, null], [7, "coin-change"]], "Computation times": [[3, null], [8, null]], "Content of the library": [[4, null]], "Countdown": [[0, null]], "Cycles": [[4, "cycles"]], "From PyPI": [[6, "from-pypi"]], "Gallery of examples": [[2, null]], "Geometry": [[4, "geometry"]], "Graphs": [[4, "graphs"]], "Installation": [[6, null]], "Intervals": [[4, "intervals"]], "Last words": [[4, "last-words"]], "Longest palindrome substring of a string": [[7, "longest-palindrome-substring-of-a-string"]], "Matching, flows and related": [[4, "matching-flows-and-related"]], "Module contents": [[10, "module-tryalgo"]], "Pathfinding": [[7, "pathfinding"]], "Quick start": [[7, null]], "Sequences and Arrays": [[4, "sequences-and-arrays"]], "Sets": [[4, "sets"]], "Shortest paths": [[4, "shortest-paths"]], "Strings": [[4, "strings"]], "Submodules": [[10, "submodules"]], "Trees": [[4, "trees"]], "Welcome to tryalgo\u2019s documentation!": [[5, null]], "With PIP": [[6, "with-pip"]], "tryalgo": [[9, null]], "tryalgo package": [[10, null]], "tryalgo.PC_tree module": [[10, "module-tryalgo.PC_tree"]], "tryalgo.Sequence module": [[10, "module-tryalgo.Sequence"]], "tryalgo.a_star module": [[10, "module-tryalgo.a_star"]], "tryalgo.anagrams module": [[10, "module-tryalgo.anagrams"]], "tryalgo.arithm module": [[10, "module-tryalgo.arithm"]], "tryalgo.arithm_expr_eval module": [[10, "module-tryalgo.arithm_expr_eval"]], "tryalgo.arithm_expr_target module": [[10, "module-tryalgo.arithm_expr_target"]], "tryalgo.bellman_ford module": [[10, "module-tryalgo.bellman_ford"]], "tryalgo.bfs module": [[10, "module-tryalgo.bfs"]], "tryalgo.biconnected_components module": [[10, "module-tryalgo.biconnected_components"]], "tryalgo.binary_search module": [[10, "module-tryalgo.binary_search"]], "tryalgo.bipartite_matching module": [[10, "module-tryalgo.bipartite_matching"]], "tryalgo.bipartite_vertex_cover module": [[10, "module-tryalgo.bipartite_vertex_cover"]], "tryalgo.closest_points module": [[10, "module-tryalgo.closest_points"]], "tryalgo.closest_values module": [[10, "module-tryalgo.closest_values"]], "tryalgo.convex_hull module": [[10, "module-tryalgo.convex_hull"]], "tryalgo.dancing_links module": [[10, "module-tryalgo.dancing_links"]], "tryalgo.dfs module": [[10, "module-tryalgo.dfs"]], "tryalgo.dijkstra module": [[10, "module-tryalgo.dijkstra"]], "tryalgo.dilworth module": [[10, "module-tryalgo.dilworth"]], "tryalgo.dinic module": [[10, "module-tryalgo.dinic"]], "tryalgo.dist_grid module": [[10, "module-tryalgo.dist_grid"]], "tryalgo.dyn_prog_tricks module": [[10, "module-tryalgo.dyn_prog_tricks"]], "tryalgo.edmonds_karp module": [[10, "module-tryalgo.edmonds_karp"]], "tryalgo.eulerian_tour module": [[10, "module-tryalgo.eulerian_tour"]], "tryalgo.fast_exponentiation module": [[10, "module-tryalgo.fast_exponentiation"]], "tryalgo.fenwick module": [[10, "module-tryalgo.fenwick"]], "tryalgo.fft module": [[10, "module-tryalgo.fft"]], "tryalgo.floyd_warshall module": [[10, "module-tryalgo.floyd_warshall"]], "tryalgo.ford_fulkerson module": [[10, "module-tryalgo.ford_fulkerson"]], "tryalgo.freivalds module": [[10, "module-tryalgo.freivalds"]], "tryalgo.gale_shapley module": [[10, "module-tryalgo.gale_shapley"]], "tryalgo.gauss_jordan module": [[10, "module-tryalgo.gauss_jordan"]], "tryalgo.graph module": [[10, "module-tryalgo.graph"]], "tryalgo.graph01 module": [[10, "module-tryalgo.graph01"]], "tryalgo.hamiltonian_cycle module": [[10, "module-tryalgo.hamiltonian_cycle"]], "tryalgo.horn_sat module": [[10, "module-tryalgo.horn_sat"]], "tryalgo.huffman module": [[10, "module-tryalgo.huffman"]], "tryalgo.interval_cover module": [[10, "module-tryalgo.interval_cover"]], "tryalgo.interval_tree module": [[10, "module-tryalgo.interval_tree"]], "tryalgo.intervals_union module": [[10, "module-tryalgo.intervals_union"]], "tryalgo.karatsuba module": [[10, "module-tryalgo.karatsuba"]], "tryalgo.knapsack module": [[10, "module-tryalgo.knapsack"]], "tryalgo.knuth_morris_pratt module": [[10, "module-tryalgo.knuth_morris_pratt"]], "tryalgo.kruskal module": [[10, "module-tryalgo.kruskal"]], "tryalgo.kuhn_munkres module": [[10, "module-tryalgo.kuhn_munkres"]], "tryalgo.kuhn_munkres_n4 module": [[10, "module-tryalgo.kuhn_munkres_n4"]], "tryalgo.laser_mirrors module": [[10, "module-tryalgo.laser_mirrors"]], "tryalgo.left_right_inversions module": [[10, "module-tryalgo.left_right_inversions"]], "tryalgo.levenshtein module": [[10, "module-tryalgo.levenshtein"]], "tryalgo.longest_common_subsequence module": [[10, "module-tryalgo.longest_common_subsequence"]], "tryalgo.longest_increasing_subsequence module": [[10, "module-tryalgo.longest_increasing_subsequence"]], "tryalgo.lowest_common_ancestor module": [[10, "module-tryalgo.lowest_common_ancestor"]], "tryalgo.majority module": [[10, "module-tryalgo.majority"]], "tryalgo.manacher module": [[10, "module-tryalgo.manacher"]], "tryalgo.matrix_chain_mult module": [[10, "module-tryalgo.matrix_chain_mult"]], "tryalgo.max_interval_intersec module": [[10, "module-tryalgo.max_interval_intersec"]], "tryalgo.merge_ordered_lists module": [[10, "module-tryalgo.merge_ordered_lists"]], "tryalgo.min_mean_cycle module": [[10, "module-tryalgo.min_mean_cycle"]], "tryalgo.next_permutation module": [[10, "module-tryalgo.next_permutation"]], "tryalgo.our_heap module": [[10, "module-tryalgo.our_heap"]], "tryalgo.our_queue module": [[10, "module-tryalgo.our_queue"]], "tryalgo.our_std module": [[10, "module-tryalgo.our_std"]], "tryalgo.pareto module": [[10, "module-tryalgo.pareto"]], "tryalgo.partition_refinement module": [[10, "module-tryalgo.partition_refinement"]], "tryalgo.permutation_rank module": [[10, "module-tryalgo.permutation_rank"]], "tryalgo.polygon module": [[10, "module-tryalgo.polygon"]], "tryalgo.predictive_text module": [[10, "module-tryalgo.predictive_text"]], "tryalgo.primes module": [[10, "module-tryalgo.primes"]], "tryalgo.rabin_karp module": [[10, "module-tryalgo.rabin_karp"]], "tryalgo.range_minimum_query module": [[10, "module-tryalgo.range_minimum_query"]], "tryalgo.rectangles_from_grid module": [[10, "module-tryalgo.rectangles_from_grid"]], "tryalgo.rectangles_from_histogram module": [[10, "module-tryalgo.rectangles_from_histogram"]], "tryalgo.rectangles_from_points module": [[10, "module-tryalgo.rectangles_from_points"]], "tryalgo.roman_numbers module": [[10, "module-tryalgo.roman_numbers"]], "tryalgo.scalar module": [[10, "module-tryalgo.scalar"]], "tryalgo.shortest_cycle module": [[10, "module-tryalgo.shortest_cycle"]], "tryalgo.skip_list module": [[10, "module-tryalgo.skip_list"]], "tryalgo.strongly_connected_components module": [[10, "module-tryalgo.strongly_connected_components"]], "tryalgo.subsetsum module": [[10, "module-tryalgo.subsetsum"]], "tryalgo.subsetsum_divide module": [[10, "module-tryalgo.subsetsum_divide"]], "tryalgo.sudoku module": [[10, "module-tryalgo.sudoku"]], "tryalgo.suffix_array module": [[10, "module-tryalgo.suffix_array"]], "tryalgo.three_partition module": [[10, "module-tryalgo.three_partition"]], "tryalgo.topological_order module": [[10, "module-tryalgo.topological_order"]], "tryalgo.tortoise_hare module": [[10, "module-tryalgo.tortoise_hare"]], "tryalgo.trie module": [[10, "module-tryalgo.trie"]], "tryalgo.two_sat module": [[10, "module-tryalgo.two_sat"]], "tryalgo.union_rectangles module": [[10, "module-tryalgo.union_rectangles"]], "tryalgo.windows_k_distinct module": [[10, "module-tryalgo.windows_k_distinct"]]}, "docnames": ["auto_examples/arithm_expr_target", "auto_examples/coin_change", "auto_examples/index", "auto_examples/sg_execution_times", "content", "index", "install", "quickstart", "sg_execution_times", "tryalgo/modules", "tryalgo/tryalgo"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["auto_examples/arithm_expr_target.rst", "auto_examples/coin_change.rst", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "content.rst", "index.rst", "install.rst", "quickstart.rst", "sg_execution_times.rst", "tryalgo/modules.rst", "tryalgo/tryalgo.rst"], "indexentries": {"a_star() (in module tryalgo.a_star)": [[10, "tryalgo.a_star.a_star", false]], "abstractskiplist (class in tryalgo.skip_list)": [[10, "tryalgo.skip_list.AbstractSkipList", false]], "add() (in module tryalgo.trie)": [[10, "tryalgo.trie.add", false]], "add() (tryalgo.fenwick.fenwick method)": [[10, "tryalgo.fenwick.Fenwick.add", false]], "add() (tryalgo.range_minimum_query.lazysegmenttree method)": [[10, "tryalgo.range_minimum_query.LazySegmentTree.add", false]], "add() (tryalgo.sequence.sequence method)": [[10, "tryalgo.Sequence.Sequence.add", false]], "add() (tryalgo.skip_list.sortedset method)": [[10, "tryalgo.skip_list.SortedSet.add", false]], "add_arc() (tryalgo.graph.graphnamedvertices method)": [[10, "tryalgo.graph.GraphNamedVertices.add_arc", false]], "add_edge() (tryalgo.graph.graphnamedvertices method)": [[10, "tryalgo.graph.GraphNamedVertices.add_edge", false]], "add_node() (tryalgo.graph.graphnamedvertices method)": [[10, "tryalgo.graph.GraphNamedVertices.add_node", false]], "add_poly() (in module tryalgo.karatsuba)": [[10, "tryalgo.karatsuba.add_poly", false]], "add_reverse_arcs() (in module tryalgo.graph)": [[10, "tryalgo.graph.add_reverse_arcs", false]], "anagrams() (in module tryalgo.anagrams)": [[10, "tryalgo.anagrams.anagrams", false]], "andrew() (in module tryalgo.convex_hull)": [[10, "tryalgo.convex_hull.andrew", false]], "area() (in module tryalgo.polygon)": [[10, "tryalgo.polygon.area", false]], "arithm_expr_eval() (in module tryalgo.arithm_expr_eval)": [[10, "tryalgo.arithm_expr_eval.arithm_expr_eval", false]], "arithm_expr_parse() (in module tryalgo.arithm_expr_eval)": [[10, "tryalgo.arithm_expr_eval.arithm_expr_parse", false]], "arithm_expr_target() (in module tryalgo.arithm_expr_target)": [[10, "tryalgo.arithm_expr_target.arithm_expr_target", false]], "attach() (tryalgo.pc_tree.leaf method)": [[10, "tryalgo.PC_tree.Leaf.attach", false]], "attach() (tryalgo.pc_tree.node method)": [[10, "tryalgo.PC_tree.Node.attach", false]], "attach_neighbors() (tryalgo.pc_tree.node method)": [[10, "tryalgo.PC_tree.Node.attach_neighbors", false]], "bellman_ford() (in module tryalgo.bellman_ford)": [[10, "tryalgo.bellman_ford.bellman_ford", false]], "bellman_ford2() (in module tryalgo.bellman_ford)": [[10, "tryalgo.bellman_ford.bellman_ford2", false]], "bezout() (in module tryalgo.arithm)": [[10, "tryalgo.arithm.bezout", false]], "bfs() (in module tryalgo.bfs)": [[10, "tryalgo.bfs.bfs", false]], "bfs_implicit() (in module tryalgo.bfs)": [[10, "tryalgo.bfs.bfs_implicit", false]], "binom() (in module tryalgo.arithm)": [[10, "tryalgo.arithm.binom", false]], "binom_modulo() (in module tryalgo.arithm)": [[10, "tryalgo.arithm.binom_modulo", false]], "bipartite_vertex_cover() (in module tryalgo.bipartite_vertex_cover)": [[10, "tryalgo.bipartite_vertex_cover.bipartite_vertex_cover", false]], "c_node (class in tryalgo.pc_tree)": [[10, "tryalgo.PC_tree.C_node", false]], "change() (tryalgo.union_rectangles.coverquery method)": [[10, "tryalgo.union_rectangles.CoverQuery.change", false]], "clean() (tryalgo.pc_tree.c_node method)": [[10, "tryalgo.PC_tree.C_node.clean", false]], "clean() (tryalgo.pc_tree.leaf method)": [[10, "tryalgo.PC_tree.Leaf.clean", false]], "clean() (tryalgo.pc_tree.node method)": [[10, "tryalgo.PC_tree.Node.clean", false]], "clean() (tryalgo.pc_tree.p_node method)": [[10, "tryalgo.PC_tree.P_node.clean", false]], "closest_points() (in module tryalgo.closest_points)": [[10, "tryalgo.closest_points.closest_points", false]], "closest_values() (in module tryalgo.closest_values)": [[10, "tryalgo.closest_values.closest_values", false]], "coin_change() (in module tryalgo.subsetsum)": [[10, "tryalgo.subsetsum.coin_change", false]], "continuous_binary_search() (in module tryalgo.binary_search)": [[10, "tryalgo.binary_search.continuous_binary_search", false]], "convert() (in module tryalgo.next_permutation)": [[10, "tryalgo.next_permutation.convert", false]], "count (tryalgo.skip_list.sorteddict.node attribute)": [[10, "tryalgo.skip_list.SortedDict.Node.count", false]], "count (tryalgo.skip_list.sortedset.node attribute)": [[10, "tryalgo.skip_list.SortedSet.Node.count", false]], "cover() (tryalgo.union_rectangles.coverquery method)": [[10, "tryalgo.union_rectangles.CoverQuery.cover", false]], "coverquery (class in tryalgo.union_rectangles)": [[10, "tryalgo.union_rectangles.CoverQuery", false]], "cut_nodes_edges() (in module tryalgo.biconnected_components)": [[10, "tryalgo.biconnected_components.cut_nodes_edges", false]], "cut_nodes_edges2() (in module tryalgo.biconnected_components)": [[10, "tryalgo.biconnected_components.cut_nodes_edges2", false]], "dancing_links() (in module tryalgo.dancing_links)": [[10, "tryalgo.dancing_links.dancing_links", false]], "decode_root_matrix_to_level() (in module tryalgo.dyn_prog_tricks)": [[10, "tryalgo.dyn_prog_tricks.decode_root_matrix_to_level", false]], "detach() (tryalgo.pc_tree.c_node method)": [[10, "tryalgo.PC_tree.C_node.detach", false]], "detach() (tryalgo.pc_tree.leaf method)": [[10, "tryalgo.PC_tree.Leaf.detach", false]], "detach() (tryalgo.pc_tree.node method)": [[10, "tryalgo.PC_tree.Node.detach", false]], "detach_bilateral() (tryalgo.pc_tree.node method)": [[10, "tryalgo.PC_tree.Node.detach_bilateral", false]], "dfs_grid() (in module tryalgo.dfs)": [[10, "tryalgo.dfs.dfs_grid", false]], "dfs_grid_recursive() (in module tryalgo.dfs)": [[10, "tryalgo.dfs.dfs_grid_recursive", false]], "dfs_iterative() (in module tryalgo.dfs)": [[10, "tryalgo.dfs.dfs_iterative", false]], "dfs_recursive() (in module tryalgo.dfs)": [[10, "tryalgo.dfs.dfs_recursive", false]], "dfs_tree() (in module tryalgo.dfs)": [[10, "tryalgo.dfs.dfs_tree", false]], "dictdict_to_listdict() (in module tryalgo.graph)": [[10, "tryalgo.graph.dictdict_to_listdict", false]], "dijkstra() (in module tryalgo.dijkstra)": [[10, "tryalgo.dijkstra.dijkstra", false]], "dijkstra_update_heap() (in module tryalgo.dijkstra)": [[10, "tryalgo.dijkstra.dijkstra_update_heap", false]], "dilworth() (in module tryalgo.dilworth)": [[10, "tryalgo.dilworth.dilworth", false]], "dinic() (in module tryalgo.dinic)": [[10, "tryalgo.dinic.dinic", false]], "discrete_binary_search() (in module tryalgo.binary_search)": [[10, "tryalgo.binary_search.discrete_binary_search", false]], "dist() (in module tryalgo.kruskal)": [[10, "tryalgo.kruskal.dist", false]], "dist01() (in module tryalgo.graph01)": [[10, "tryalgo.graph01.dist01", false]], "dist_grid() (in module tryalgo.dist_grid)": [[10, "tryalgo.dist_grid.dist_grid", false]], "down() (tryalgo.our_heap.ourheap method)": [[10, "tryalgo.our_heap.OurHeap.down", false]], "dyn_prog_monge() (in module tryalgo.dyn_prog_tricks)": [[10, "tryalgo.dyn_prog_tricks.dyn_prog_Monge", false]], "edmonds_karp() (in module tryalgo.edmonds_karp)": [[10, "tryalgo.edmonds_karp.edmonds_karp", false]], "eratosthene() (in module tryalgo.primes)": [[10, "tryalgo.primes.eratosthene", false]], "eulerian_tour_directed() (in module tryalgo.eulerian_tour)": [[10, "tryalgo.eulerian_tour.eulerian_tour_directed", false]], "eulerian_tour_undirected() (in module tryalgo.eulerian_tour)": [[10, "tryalgo.eulerian_tour.eulerian_tour_undirected", false]], "eval_poly() (in module tryalgo.karatsuba)": [[10, "tryalgo.karatsuba.eval_poly", false]], "extract() (in module tryalgo.huffman)": [[10, "tryalgo.huffman.extract", false]], "extract_path() (in module tryalgo.graph)": [[10, "tryalgo.graph.extract_path", false]], "fast_exponentiation() (in module tryalgo.fast_exponentiation)": [[10, "tryalgo.fast_exponentiation.fast_exponentiation", false]], "fast_exponentiation2() (in module tryalgo.fast_exponentiation)": [[10, "tryalgo.fast_exponentiation.fast_exponentiation2", false]], "fenwick (class in tryalgo.fenwick)": [[10, "tryalgo.fenwick.Fenwick", false]], "fenwickmin (class in tryalgo.fenwick)": [[10, "tryalgo.fenwick.FenwickMin", false]], "fft() (in module tryalgo.fft)": [[10, "tryalgo.fft.fft", false]], "find() (tryalgo.kruskal.unionfind method)": [[10, "tryalgo.kruskal.UnionFind.find", false]], "find() (tryalgo.skip_list.abstractskiplist method)": [[10, "tryalgo.skip_list.AbstractSkipList.find", false]], "find_cycle() (in module tryalgo.dfs)": [[10, "tryalgo.dfs.find_cycle", false]], "flip() (tryalgo.pc_tree.c_node method)": [[10, "tryalgo.PC_tree.C_node.flip", false]], "floyd_warshall() (in module tryalgo.floyd_warshall)": [[10, "tryalgo.floyd_warshall.floyd_warshall", false]], "floyd_warshall2() (in module tryalgo.floyd_warshall)": [[10, "tryalgo.floyd_warshall.floyd_warshall2", false]], "ford_fulkerson() (in module tryalgo.ford_fulkerson)": [[10, "tryalgo.ford_fulkerson.ford_fulkerson", false]], "freivalds() (in module tryalgo.freivalds)": [[10, "tryalgo.freivalds.freivalds", false]], "frontier() (tryalgo.pc_tree.c_node method)": [[10, "tryalgo.PC_tree.C_node.frontier", false]], "frontier() (tryalgo.pc_tree.leaf method)": [[10, "tryalgo.PC_tree.Leaf.frontier", false]], "frontier() (tryalgo.pc_tree.p_node method)": [[10, "tryalgo.PC_tree.P_node.frontier", false]], "frontier() (tryalgo.pc_tree.pc_tree method)": [[10, "tryalgo.PC_tree.PC_tree.frontier", false]], "gale_shapley() (in module tryalgo.gale_shapley)": [[10, "tryalgo.gale_shapley.gale_shapley", false]], "gauss_jordan() (in module tryalgo.gauss_jordan)": [[10, "tryalgo.gauss_jordan.gauss_jordan", false]], "get() (tryalgo.fenwick.fenwick method)": [[10, "tryalgo.fenwick.Fenwick.get", false]], "getkth() (tryalgo.skip_list.abstractskiplist method)": [[10, "tryalgo.skip_list.AbstractSkipList.getkth", false]], "graphnamedvertices (class in tryalgo.graph)": [[10, "tryalgo.graph.GraphNamedVertices", false]], "gries_misra() (in module tryalgo.primes)": [[10, "tryalgo.primes.gries_misra", false]], "hamiltonian_cycle() (in module tryalgo.hamiltonian_cycle)": [[10, "tryalgo.hamiltonian_cycle.hamiltonian_cycle", false]], "horn_sat() (in module tryalgo.horn_sat)": [[10, "tryalgo.horn_sat.horn_sat", false]], "huffman() (in module tryalgo.huffman)": [[10, "tryalgo.huffman.huffman", false]], "infeasible": [[10, "tryalgo.PC_tree.Infeasible", false]], "insert() (tryalgo.skip_list.abstractskiplist method)": [[10, "tryalgo.skip_list.AbstractSkipList.insert", false]], "insertafter() (tryalgo.sequence.sequence method)": [[10, "tryalgo.Sequence.Sequence.insertAfter", false]], "insertbefore() (tryalgo.sequence.sequence method)": [[10, "tryalgo.Sequence.Sequence.insertBefore", false]], "int2roman() (in module tryalgo.roman_numbers)": [[10, "tryalgo.roman_numbers.int2roman", false]], "interval_cover() (in module tryalgo.interval_cover)": [[10, "tryalgo.interval_cover.interval_cover", false]], "interval_tree() (in module tryalgo.interval_tree)": [[10, "tryalgo.interval_tree.interval_tree", false]], "intervaladd() (tryalgo.fenwick.fenwick method)": [[10, "tryalgo.fenwick.Fenwick.intervalAdd", false]], "intervals_containing() (in module tryalgo.interval_tree)": [[10, "tryalgo.interval_tree.intervals_containing", false]], "intervals_union() (in module tryalgo.intervals_union)": [[10, "tryalgo.intervals_union.intervals_union", false]], "intervalsum() (tryalgo.fenwick.fenwick method)": [[10, "tryalgo.fenwick.Fenwick.intervalSum", false]], "inv() (in module tryalgo.arithm)": [[10, "tryalgo.arithm.inv", false]], "inv_fft() (in module tryalgo.fft)": [[10, "tryalgo.fft.inv_fft", false]], "is_bipartite() (in module tryalgo.dfs)": [[10, "tryalgo.dfs.is_bipartite", false]], "is_eulerian_tour_directed() (in module tryalgo.eulerian_tour)": [[10, "tryalgo.eulerian_tour.is_eulerian_tour_directed", false]], "is_eulerian_tour_undirected() (in module tryalgo.eulerian_tour)": [[10, "tryalgo.eulerian_tour.is_eulerian_tour_undirected", false]], "is_full() (tryalgo.pc_tree.leaf method)": [[10, "tryalgo.PC_tree.Leaf.is_full", false]], "is_full() (tryalgo.pc_tree.node method)": [[10, "tryalgo.PC_tree.Node.is_full", false]], "is_partial() (tryalgo.pc_tree.node method)": [[10, "tryalgo.PC_tree.Node.is_partial", false]], "is_simple() (in module tryalgo.polygon)": [[10, "tryalgo.polygon.is_simple", false]], "key (tryalgo.skip_list.sorteddict.node attribute)": [[10, "tryalgo.skip_list.SortedDict.Node.key", false]], "key (tryalgo.skip_list.sortedset.node attribute)": [[10, "tryalgo.skip_list.SortedSet.Node.key", false]], "key() (tryalgo.sequence.sequence method)": [[10, "tryalgo.Sequence.Sequence.key", false]], "keys() (tryalgo.skip_list.sorteddict method)": [[10, "tryalgo.skip_list.SortedDict.keys", false]], "knapsack() (in module tryalgo.knapsack)": [[10, "tryalgo.knapsack.knapsack", false]], "knapsack2() (in module tryalgo.knapsack)": [[10, "tryalgo.knapsack.knapsack2", false]], "knuth_morris_pratt() (in module tryalgo.knuth_morris_pratt)": [[10, "tryalgo.knuth_morris_pratt.knuth_morris_pratt", false]], "kosaraju() (in module tryalgo.strongly_connected_components)": [[10, "tryalgo.strongly_connected_components.kosaraju", false]], "kruskal() (in module tryalgo.kruskal)": [[10, "tryalgo.kruskal.kruskal", false]], "kuhn_munkres() (in module tryalgo.kuhn_munkres)": [[10, "tryalgo.kuhn_munkres.kuhn_munkres", false]], "kuhn_munkres() (in module tryalgo.kuhn_munkres_n4)": [[10, "tryalgo.kuhn_munkres_n4.kuhn_munkres", false]], "laser_mirrors() (in module tryalgo.laser_mirrors)": [[10, "tryalgo.laser_mirrors.laser_mirrors", false]], "lastkey() (tryalgo.skip_list.abstractskiplist method)": [[10, "tryalgo.skip_list.AbstractSkipList.lastKey", false]], "lazysegmenttree (class in tryalgo.range_minimum_query)": [[10, "tryalgo.range_minimum_query.LazySegmentTree", false]], "leaf (class in tryalgo.pc_tree)": [[10, "tryalgo.PC_tree.Leaf", false]], "left_right_inversions() (in module tryalgo.left_right_inversions)": [[10, "tryalgo.left_right_inversions.left_right_inversions", false]], "levenshtein() (in module tryalgo.levenshtein)": [[10, "tryalgo.levenshtein.levenshtein", false]], "listdict_to_listlist_and_matrix() (in module tryalgo.graph)": [[10, "tryalgo.graph.listdict_to_listlist_and_matrix", false]], "listlist_and_matrix_to_listdict() (in module tryalgo.graph)": [[10, "tryalgo.graph.listlist_and_matrix_to_listdict", false]], "log2ceil() (in module tryalgo.lowest_common_ancestor)": [[10, "tryalgo.lowest_common_ancestor.log2ceil", false]], "log2floor() (in module tryalgo.lowest_common_ancestor)": [[10, "tryalgo.lowest_common_ancestor.log2floor", false]], "longest_common_subsequence() (in module tryalgo.longest_common_subsequence)": [[10, "tryalgo.longest_common_subsequence.longest_common_subsequence", false]], "longest_increasing_subsequence() (in module tryalgo.longest_increasing_subsequence)": [[10, "tryalgo.longest_increasing_subsequence.longest_increasing_subsequence", false]], "lowestcommonancestorrmq (class in tryalgo.lowest_common_ancestor)": [[10, "tryalgo.lowest_common_ancestor.LowestCommonAncestorRMQ", false]], "lowestcommonancestorshortcuts (class in tryalgo.lowest_common_ancestor)": [[10, "tryalgo.lowest_common_ancestor.LowestCommonAncestorShortcuts", false]], "majority() (in module tryalgo.majority)": [[10, "tryalgo.majority.majority", false]], "make_flow_labels() (in module tryalgo.graph)": [[10, "tryalgo.graph.make_flow_labels", false]], "manacher() (in module tryalgo.manacher)": [[10, "tryalgo.manacher.manacher", false]], "matches() (in module tryalgo.rabin_karp)": [[10, "tryalgo.rabin_karp.matches", false]], "matrix_chain_mult() (in module tryalgo.matrix_chain_mult)": [[10, "tryalgo.matrix_chain_mult.matrix_chain_mult", false]], "matrix_mult_opt_order() (in module tryalgo.matrix_chain_mult)": [[10, "tryalgo.matrix_chain_mult.matrix_mult_opt_order", false]], "matrix_to_listlist() (in module tryalgo.graph)": [[10, "tryalgo.graph.matrix_to_listlist", false]], "max() (tryalgo.range_minimum_query.lazysegmenttree method)": [[10, "tryalgo.range_minimum_query.LazySegmentTree.max", false]], "max_bipartite_matching() (in module tryalgo.bipartite_matching)": [[10, "tryalgo.bipartite_matching.max_bipartite_matching", false]], "max_interval_intersec() (in module tryalgo.max_interval_intersec)": [[10, "tryalgo.max_interval_intersec.max_interval_intersec", false]], "maximum_border_length() (in module tryalgo.knuth_morris_pratt)": [[10, "tryalgo.knuth_morris_pratt.maximum_border_length", false]], "merge() (in module tryalgo.merge_ordered_lists)": [[10, "tryalgo.merge_ordered_lists.merge", false]], "min() (tryalgo.range_minimum_query.lazysegmenttree method)": [[10, "tryalgo.range_minimum_query.LazySegmentTree.min", false]], "min_mean_cycle() (in module tryalgo.min_mean_cycle)": [[10, "tryalgo.min_mean_cycle.min_mean_cycle", false]], "min_scalar_prod() (in module tryalgo.scalar)": [[10, "tryalgo.scalar.min_scalar_prod", false]], "module": [[10, "module-tryalgo", false], [10, "module-tryalgo.PC_tree", false], [10, "module-tryalgo.Sequence", false], [10, "module-tryalgo.a_star", false], [10, "module-tryalgo.anagrams", false], [10, "module-tryalgo.arithm", false], [10, "module-tryalgo.arithm_expr_eval", false], [10, "module-tryalgo.arithm_expr_target", false], [10, "module-tryalgo.bellman_ford", false], [10, "module-tryalgo.bfs", false], [10, "module-tryalgo.biconnected_components", false], [10, "module-tryalgo.binary_search", false], [10, "module-tryalgo.bipartite_matching", false], [10, "module-tryalgo.bipartite_vertex_cover", false], [10, "module-tryalgo.closest_points", false], [10, "module-tryalgo.closest_values", false], [10, "module-tryalgo.convex_hull", false], [10, "module-tryalgo.dancing_links", false], [10, "module-tryalgo.dfs", false], [10, "module-tryalgo.dijkstra", false], [10, "module-tryalgo.dilworth", false], [10, "module-tryalgo.dinic", false], [10, "module-tryalgo.dist_grid", false], [10, "module-tryalgo.dyn_prog_tricks", false], [10, "module-tryalgo.edmonds_karp", false], [10, "module-tryalgo.eulerian_tour", false], [10, "module-tryalgo.fast_exponentiation", false], [10, "module-tryalgo.fenwick", false], [10, "module-tryalgo.fft", false], [10, "module-tryalgo.floyd_warshall", false], [10, "module-tryalgo.ford_fulkerson", false], [10, "module-tryalgo.freivalds", false], [10, "module-tryalgo.gale_shapley", false], [10, "module-tryalgo.gauss_jordan", false], [10, "module-tryalgo.graph", false], [10, "module-tryalgo.graph01", false], [10, "module-tryalgo.hamiltonian_cycle", false], [10, "module-tryalgo.horn_sat", false], [10, "module-tryalgo.huffman", false], [10, "module-tryalgo.interval_cover", false], [10, "module-tryalgo.interval_tree", false], [10, "module-tryalgo.intervals_union", false], [10, "module-tryalgo.karatsuba", false], [10, "module-tryalgo.knapsack", false], [10, "module-tryalgo.knuth_morris_pratt", false], [10, "module-tryalgo.kruskal", false], [10, "module-tryalgo.kuhn_munkres", false], [10, "module-tryalgo.kuhn_munkres_n4", false], [10, "module-tryalgo.laser_mirrors", false], [10, "module-tryalgo.left_right_inversions", false], [10, "module-tryalgo.levenshtein", false], [10, "module-tryalgo.longest_common_subsequence", false], [10, "module-tryalgo.longest_increasing_subsequence", false], [10, "module-tryalgo.lowest_common_ancestor", false], [10, "module-tryalgo.majority", false], [10, "module-tryalgo.manacher", false], [10, "module-tryalgo.matrix_chain_mult", false], [10, "module-tryalgo.max_interval_intersec", false], [10, "module-tryalgo.merge_ordered_lists", false], [10, "module-tryalgo.min_mean_cycle", false], [10, "module-tryalgo.next_permutation", false], [10, "module-tryalgo.our_heap", false], [10, "module-tryalgo.our_queue", false], [10, "module-tryalgo.our_std", false], [10, "module-tryalgo.pareto", false], [10, "module-tryalgo.partition_refinement", false], [10, "module-tryalgo.permutation_rank", false], [10, "module-tryalgo.polygon", false], [10, "module-tryalgo.predictive_text", false], [10, "module-tryalgo.primes", false], [10, "module-tryalgo.rabin_karp", false], [10, "module-tryalgo.range_minimum_query", false], [10, "module-tryalgo.rectangles_from_grid", false], [10, "module-tryalgo.rectangles_from_histogram", false], [10, "module-tryalgo.rectangles_from_points", false], [10, "module-tryalgo.roman_numbers", false], [10, "module-tryalgo.scalar", false], [10, "module-tryalgo.shortest_cycle", false], [10, "module-tryalgo.skip_list", false], [10, "module-tryalgo.strongly_connected_components", false], [10, "module-tryalgo.subsetsum", false], [10, "module-tryalgo.subsetsum_divide", false], [10, "module-tryalgo.sudoku", false], [10, "module-tryalgo.suffix_array", false], [10, "module-tryalgo.three_partition", false], [10, "module-tryalgo.topological_order", false], [10, "module-tryalgo.tortoise_hare", false], [10, "module-tryalgo.trie", false], [10, "module-tryalgo.two_sat", false], [10, "module-tryalgo.union_rectangles", false], [10, "module-tryalgo.windows_k_distinct", false]], "mul_poly() (in module tryalgo.karatsuba)": [[10, "tryalgo.karatsuba.mul_poly", false]], "mul_poly_fft() (in module tryalgo.fft)": [[10, "tryalgo.fft.mul_poly_fft", false]], "next (tryalgo.skip_list.sorteddict.node attribute)": [[10, "tryalgo.skip_list.SortedDict.Node.next", false]], "next (tryalgo.skip_list.sortedset.node attribute)": [[10, "tryalgo.skip_list.SortedSet.Node.next", false]], "next_permutation() (in module tryalgo.next_permutation)": [[10, "tryalgo.next_permutation.next_permutation", false]], "nextkey() (tryalgo.skip_list.abstractskiplist method)": [[10, "tryalgo.skip_list.AbstractSkipList.nextKey", false]], "nextnode() (tryalgo.skip_list.abstractskiplist method)": [[10, "tryalgo.skip_list.AbstractSkipList.nextNode", false]], "node (class in tryalgo.pc_tree)": [[10, "tryalgo.PC_tree.Node", false]], "opt_bin_search_tree1() (in module tryalgo.dyn_prog_tricks)": [[10, "tryalgo.dyn_prog_tricks.opt_bin_search_tree1", false]], "opt_bin_search_tree2() (in module tryalgo.dyn_prog_tricks)": [[10, "tryalgo.dyn_prog_tricks.opt_bin_search_tree2", false]], "optimized_binary_search() (in module tryalgo.binary_search)": [[10, "tryalgo.binary_search.optimized_binary_search", false]], "optimized_binary_search_lower() (in module tryalgo.binary_search)": [[10, "tryalgo.binary_search.optimized_binary_search_lower", false]], "order() (tryalgo.partition_refinement.partitionrefinement method)": [[10, "tryalgo.partition_refinement.PartitionRefinement.order", false]], "ourheap (class in tryalgo.our_heap)": [[10, "tryalgo.our_heap.OurHeap", false]], "ourqueue (class in tryalgo.our_queue)": [[10, "tryalgo.our_queue.OurQueue", false]], "p_node (class in tryalgo.pc_tree)": [[10, "tryalgo.PC_tree.P_node", false]], "pad() (in module tryalgo.fft)": [[10, "tryalgo.fft.pad", false]], "pareto2d() (in module tryalgo.pareto)": [[10, "tryalgo.pareto.pareto2d", false]], "pareto3d() (in module tryalgo.pareto)": [[10, "tryalgo.pareto.pareto3d", false]], "part_sum() (in module tryalgo.subsetsum_divide)": [[10, "tryalgo.subsetsum_divide.part_sum", false]], "part_sum2() (in module tryalgo.subsetsum_divide)": [[10, "tryalgo.subsetsum_divide.part_sum2", false]], "partitionrefinement (class in tryalgo.partition_refinement)": [[10, "tryalgo.partition_refinement.PartitionRefinement", false]], "pc_tree (class in tryalgo.pc_tree)": [[10, "tryalgo.PC_tree.PC_tree", false]], "permutation_rank() (in module tryalgo.permutation_rank)": [[10, "tryalgo.permutation_rank.permutation_rank", false]], "pgcd() (in module tryalgo.arithm)": [[10, "tryalgo.arithm.pgcd", false]], "pop() (tryalgo.our_heap.ourheap method)": [[10, "tryalgo.our_heap.OurHeap.pop", false]], "pop() (tryalgo.our_queue.ourqueue method)": [[10, "tryalgo.our_queue.OurQueue.pop", false]], "pop() (tryalgo.skip_list.sortedset method)": [[10, "tryalgo.skip_list.SortedSet.pop", false]], "powergraph() (in module tryalgo.shortest_cycle)": [[10, "tryalgo.shortest_cycle.powergraph", false]], "powerstring_by_border() (in module tryalgo.knuth_morris_pratt)": [[10, "tryalgo.knuth_morris_pratt.powerstring_by_border", false]], "powerstring_by_find() (in module tryalgo.knuth_morris_pratt)": [[10, "tryalgo.knuth_morris_pratt.powerstring_by_find", false]], "predecessor() (tryalgo.sequence.sequence method)": [[10, "tryalgo.Sequence.Sequence.predecessor", false]], "predictive_text() (in module tryalgo.predictive_text)": [[10, "tryalgo.predictive_text.predictive_text", false]], "prefixmin() (tryalgo.fenwick.fenwickmin method)": [[10, "tryalgo.fenwick.FenwickMin.prefixMin", false]], "prefixsum() (tryalgo.fenwick.fenwick method)": [[10, "tryalgo.fenwick.Fenwick.prefixSum", false]], "print_dot() (tryalgo.pc_tree.pc_tree method)": [[10, "tryalgo.PC_tree.PC_tree.print_dot", false]], "propose() (in module tryalgo.predictive_text)": [[10, "tryalgo.predictive_text.propose", false]], "push() (tryalgo.our_heap.ourheap method)": [[10, "tryalgo.our_heap.OurHeap.push", false]], "push() (tryalgo.our_queue.ourqueue method)": [[10, "tryalgo.our_queue.OurQueue.push", false]], "query() (tryalgo.lowest_common_ancestor.lowestcommonancestorrmq method)": [[10, "tryalgo.lowest_common_ancestor.LowestCommonAncestorRMQ.query", false]], "query() (tryalgo.lowest_common_ancestor.lowestcommonancestorshortcuts method)": [[10, "tryalgo.lowest_common_ancestor.LowestCommonAncestorShortcuts.query", false]], "rabin_karp_factor() (in module tryalgo.rabin_karp)": [[10, "tryalgo.rabin_karp.rabin_karp_factor", false]], "rabin_karp_matching() (in module tryalgo.rabin_karp)": [[10, "tryalgo.rabin_karp.rabin_karp_matching", false]], "random() (in module tryalgo.skip_list)": [[10, "tryalgo.skip_list.random", false]], "random_eulerien_graph() (in module tryalgo.eulerian_tour)": [[10, "tryalgo.eulerian_tour.random_eulerien_graph", false]], "randomheight() (tryalgo.skip_list.abstractskiplist static method)": [[10, "tryalgo.skip_list.AbstractSkipList.randomHeight", false]], "range_min() (tryalgo.range_minimum_query.rangeminquery method)": [[10, "tryalgo.range_minimum_query.RangeMinQuery.range_min", false]], "rangeminquery (class in tryalgo.range_minimum_query)": [[10, "tryalgo.range_minimum_query.RangeMinQuery", false]], "rank_permutation() (in module tryalgo.permutation_rank)": [[10, "tryalgo.permutation_rank.rank_permutation", false]], "read() (in module tryalgo.horn_sat)": [[10, "tryalgo.horn_sat.read", false]], "read_graph() (in module tryalgo.graph)": [[10, "tryalgo.graph.read_graph", false]], "readarray() (in module tryalgo.our_std)": [[10, "tryalgo.our_std.readarray", false]], "readint() (in module tryalgo.our_std)": [[10, "tryalgo.our_std.readint", false]], "readmatrix() (in module tryalgo.our_std)": [[10, "tryalgo.our_std.readmatrix", false]], "readstr() (in module tryalgo.our_std)": [[10, "tryalgo.our_std.readstr", false]], "readtab() (in module tryalgo.graph)": [[10, "tryalgo.graph.readtab", false]], "readval() (in module tryalgo.graph)": [[10, "tryalgo.graph.readval", false]], "rectangles_contains_point() (in module tryalgo.union_rectangles)": [[10, "tryalgo.union_rectangles.rectangles_contains_point", false]], "rectangles_from_grid() (in module tryalgo.rectangles_from_grid)": [[10, "tryalgo.rectangles_from_grid.rectangles_from_grid", false]], "rectangles_from_histogram() (in module tryalgo.rectangles_from_histogram)": [[10, "tryalgo.rectangles_from_histogram.rectangles_from_histogram", false]], "rectangles_from_points() (in module tryalgo.rectangles_from_points)": [[10, "tryalgo.rectangles_from_points.rectangles_from_points", false]], "refine() (tryalgo.partition_refinement.partitionrefinement method)": [[10, "tryalgo.partition_refinement.PartitionRefinement.refine", false]], "remove() (tryalgo.sequence.sequence method)": [[10, "tryalgo.Sequence.Sequence.remove", false]], "remove() (tryalgo.skip_list.abstractskiplist method)": [[10, "tryalgo.skip_list.AbstractSkipList.remove", false]], "replace() (tryalgo.sequence.sequence method)": [[10, "tryalgo.Sequence.Sequence.replace", false]], "represent() (tryalgo.pc_tree.c_node method)": [[10, "tryalgo.PC_tree.C_node.represent", false]], "represent() (tryalgo.pc_tree.p_node method)": [[10, "tryalgo.PC_tree.P_node.represent", false]], "represent() (tryalgo.pc_tree.pc_tree method)": [[10, "tryalgo.PC_tree.PC_tree.represent", false]], "represent_parent() (tryalgo.pc_tree.node method)": [[10, "tryalgo.PC_tree.Node.represent_parent", false]], "restrict() (tryalgo.pc_tree.pc_tree method)": [[10, "tryalgo.PC_tree.PC_tree.restrict", false]], "reverse() (in module tryalgo.strongly_connected_components)": [[10, "tryalgo.strongly_connected_components.reverse", false]], "roll_hash() (in module tryalgo.rabin_karp)": [[10, "tryalgo.rabin_karp.roll_hash", false]], "roman2int() (in module tryalgo.roman_numbers)": [[10, "tryalgo.roman_numbers.roman2int", false]], "search() (in module tryalgo.trie)": [[10, "tryalgo.trie.search", false]], "sequence (class in tryalgo.sequence)": [[10, "tryalgo.Sequence.Sequence", false]], "sequenceerror": [[10, "tryalgo.Sequence.SequenceError", false]], "set() (tryalgo.range_minimum_query.lazysegmenttree method)": [[10, "tryalgo.range_minimum_query.LazySegmentTree.set", false]], "shortest_cycle() (in module tryalgo.shortest_cycle)": [[10, "tryalgo.shortest_cycle.shortest_cycle", false]], "signal_full() (tryalgo.pc_tree.c_node method)": [[10, "tryalgo.PC_tree.C_node.signal_full", false]], "signal_full() (tryalgo.pc_tree.node method)": [[10, "tryalgo.PC_tree.Node.signal_full", false]], "signal_full() (tryalgo.pc_tree.p_node method)": [[10, "tryalgo.PC_tree.P_node.signal_full", false]], "solve() (in module tryalgo.laser_mirrors)": [[10, "tryalgo.laser_mirrors.solve", false]], "solve_word_addition() (in module tryalgo.next_permutation)": [[10, "tryalgo.next_permutation.solve_word_addition", false]], "sort_class() (in module tryalgo.suffix_array)": [[10, "tryalgo.suffix_array.sort_class", false]], "sort_cyclic_shifts() (in module tryalgo.suffix_array)": [[10, "tryalgo.suffix_array.sort_cyclic_shifts", false]], "sorteddict (class in tryalgo.skip_list)": [[10, "tryalgo.skip_list.SortedDict", false]], "sorteddict.node (class in tryalgo.skip_list)": [[10, "tryalgo.skip_list.SortedDict.Node", false]], "sortedset (class in tryalgo.skip_list)": [[10, "tryalgo.skip_list.SortedSet", false]], "sortedset.node (class in tryalgo.skip_list)": [[10, "tryalgo.skip_list.SortedSet.Node", false]], "spell_check() (in module tryalgo.trie)": [[10, "tryalgo.trie.spell_check", false]], "split() (tryalgo.pc_tree.c_node method)": [[10, "tryalgo.PC_tree.C_node.split", false]], "split() (tryalgo.pc_tree.p_node method)": [[10, "tryalgo.PC_tree.P_node.split", false]], "sub_poly() (in module tryalgo.karatsuba)": [[10, "tryalgo.karatsuba.sub_poly", false]], "subset_sum() (in module tryalgo.subsetsum)": [[10, "tryalgo.subsetsum.subset_sum", false]], "subset_sum() (in module tryalgo.subsetsum_divide)": [[10, "tryalgo.subsetsum_divide.subset_sum", false]], "subset_sum2() (in module tryalgo.subsetsum_divide)": [[10, "tryalgo.subsetsum_divide.subset_sum2", false]], "successor() (tryalgo.sequence.sequence method)": [[10, "tryalgo.Sequence.Sequence.successor", false]], "sudoku() (in module tryalgo.sudoku)": [[10, "tryalgo.sudoku.sudoku", false]], "suffix_array() (in module tryalgo.suffix_array)": [[10, "tryalgo.suffix_array.suffix_array", false]], "sum() (tryalgo.range_minimum_query.lazysegmenttree method)": [[10, "tryalgo.range_minimum_query.LazySegmentTree.sum", false]], "tarjan() (in module tryalgo.strongly_connected_components)": [[10, "tryalgo.strongly_connected_components.tarjan", false]], "tarjan_recursif() (in module tryalgo.strongly_connected_components)": [[10, "tryalgo.strongly_connected_components.tarjan_recursif", false]], "ternary_search() (in module tryalgo.binary_search)": [[10, "tryalgo.binary_search.ternary_search", false]], "three_partition() (in module tryalgo.three_partition)": [[10, "tryalgo.three_partition.three_partition", false]], "to_signal() (tryalgo.pc_tree.c_node method)": [[10, "tryalgo.PC_tree.C_node.to_signal", false]], "to_signal() (tryalgo.pc_tree.leaf method)": [[10, "tryalgo.PC_tree.Leaf.to_signal", false]], "to_signal() (tryalgo.pc_tree.p_node method)": [[10, "tryalgo.PC_tree.P_node.to_signal", false]], "tolist() (tryalgo.partition_refinement.partitionrefinement method)": [[10, "tryalgo.partition_refinement.PartitionRefinement.tolist", false]], "topological_order() (in module tryalgo.topological_order)": [[10, "tryalgo.topological_order.topological_order", false]], "topological_order_dfs() (in module tryalgo.topological_order)": [[10, "tryalgo.topological_order.topological_order_dfs", false]], "tortoise_hare() (in module tryalgo.tortoise_hare)": [[10, "tryalgo.tortoise_hare.tortoise_hare", false]], "tree_adj_to_prec() (in module tryalgo.graph)": [[10, "tryalgo.graph.tree_adj_to_prec", false]], "tree_prec_to_adj() (in module tryalgo.graph)": [[10, "tryalgo.graph.tree_prec_to_adj", false]], "trie() (in module tryalgo.trie)": [[10, "tryalgo.trie.Trie", false]], "trienode (class in tryalgo.trie)": [[10, "tryalgo.trie.TrieNode", false]], "tryalgo": [[10, "module-tryalgo", false]], "tryalgo.a_star": [[10, "module-tryalgo.a_star", false]], "tryalgo.anagrams": [[10, "module-tryalgo.anagrams", false]], "tryalgo.arithm": [[10, "module-tryalgo.arithm", false]], "tryalgo.arithm_expr_eval": [[10, "module-tryalgo.arithm_expr_eval", false]], "tryalgo.arithm_expr_target": [[10, "module-tryalgo.arithm_expr_target", false]], "tryalgo.bellman_ford": [[10, "module-tryalgo.bellman_ford", false]], "tryalgo.bfs": [[10, "module-tryalgo.bfs", false]], "tryalgo.biconnected_components": [[10, "module-tryalgo.biconnected_components", false]], "tryalgo.binary_search": [[10, "module-tryalgo.binary_search", false]], "tryalgo.bipartite_matching": [[10, "module-tryalgo.bipartite_matching", false]], "tryalgo.bipartite_vertex_cover": [[10, "module-tryalgo.bipartite_vertex_cover", false]], "tryalgo.closest_points": [[10, "module-tryalgo.closest_points", false]], "tryalgo.closest_values": [[10, "module-tryalgo.closest_values", false]], "tryalgo.convex_hull": [[10, "module-tryalgo.convex_hull", false]], "tryalgo.dancing_links": [[10, "module-tryalgo.dancing_links", false]], "tryalgo.dfs": [[10, "module-tryalgo.dfs", false]], "tryalgo.dijkstra": [[10, "module-tryalgo.dijkstra", false]], "tryalgo.dilworth": [[10, "module-tryalgo.dilworth", false]], "tryalgo.dinic": [[10, "module-tryalgo.dinic", false]], "tryalgo.dist_grid": [[10, "module-tryalgo.dist_grid", false]], "tryalgo.dyn_prog_tricks": [[10, "module-tryalgo.dyn_prog_tricks", false]], "tryalgo.edmonds_karp": [[10, "module-tryalgo.edmonds_karp", false]], "tryalgo.eulerian_tour": [[10, "module-tryalgo.eulerian_tour", false]], "tryalgo.fast_exponentiation": [[10, "module-tryalgo.fast_exponentiation", false]], "tryalgo.fenwick": [[10, "module-tryalgo.fenwick", false]], "tryalgo.fft": [[10, "module-tryalgo.fft", false]], "tryalgo.floyd_warshall": [[10, "module-tryalgo.floyd_warshall", false]], "tryalgo.ford_fulkerson": [[10, "module-tryalgo.ford_fulkerson", false]], "tryalgo.freivalds": [[10, "module-tryalgo.freivalds", false]], "tryalgo.gale_shapley": [[10, "module-tryalgo.gale_shapley", false]], "tryalgo.gauss_jordan": [[10, "module-tryalgo.gauss_jordan", false]], "tryalgo.graph": [[10, "module-tryalgo.graph", false]], "tryalgo.graph01": [[10, "module-tryalgo.graph01", false]], "tryalgo.hamiltonian_cycle": [[10, "module-tryalgo.hamiltonian_cycle", false]], "tryalgo.horn_sat": [[10, "module-tryalgo.horn_sat", false]], "tryalgo.huffman": [[10, "module-tryalgo.huffman", false]], "tryalgo.interval_cover": [[10, "module-tryalgo.interval_cover", false]], "tryalgo.interval_tree": [[10, "module-tryalgo.interval_tree", false]], "tryalgo.intervals_union": [[10, "module-tryalgo.intervals_union", false]], "tryalgo.karatsuba": [[10, "module-tryalgo.karatsuba", false]], "tryalgo.knapsack": [[10, "module-tryalgo.knapsack", false]], "tryalgo.knuth_morris_pratt": [[10, "module-tryalgo.knuth_morris_pratt", false]], "tryalgo.kruskal": [[10, "module-tryalgo.kruskal", false]], "tryalgo.kuhn_munkres": [[10, "module-tryalgo.kuhn_munkres", false]], "tryalgo.kuhn_munkres_n4": [[10, "module-tryalgo.kuhn_munkres_n4", false]], "tryalgo.laser_mirrors": [[10, "module-tryalgo.laser_mirrors", false]], "tryalgo.left_right_inversions": [[10, "module-tryalgo.left_right_inversions", false]], "tryalgo.levenshtein": [[10, "module-tryalgo.levenshtein", false]], "tryalgo.longest_common_subsequence": [[10, "module-tryalgo.longest_common_subsequence", false]], "tryalgo.longest_increasing_subsequence": [[10, "module-tryalgo.longest_increasing_subsequence", false]], "tryalgo.lowest_common_ancestor": [[10, "module-tryalgo.lowest_common_ancestor", false]], "tryalgo.majority": [[10, "module-tryalgo.majority", false]], "tryalgo.manacher": [[10, "module-tryalgo.manacher", false]], "tryalgo.matrix_chain_mult": [[10, "module-tryalgo.matrix_chain_mult", false]], "tryalgo.max_interval_intersec": [[10, "module-tryalgo.max_interval_intersec", false]], "tryalgo.merge_ordered_lists": [[10, "module-tryalgo.merge_ordered_lists", false]], "tryalgo.min_mean_cycle": [[10, "module-tryalgo.min_mean_cycle", false]], "tryalgo.next_permutation": [[10, "module-tryalgo.next_permutation", false]], "tryalgo.our_heap": [[10, "module-tryalgo.our_heap", false]], "tryalgo.our_queue": [[10, "module-tryalgo.our_queue", false]], "tryalgo.our_std": [[10, "module-tryalgo.our_std", false]], "tryalgo.pareto": [[10, "module-tryalgo.pareto", false]], "tryalgo.partition_refinement": [[10, "module-tryalgo.partition_refinement", false]], "tryalgo.pc_tree": [[10, "module-tryalgo.PC_tree", false]], "tryalgo.permutation_rank": [[10, "module-tryalgo.permutation_rank", false]], "tryalgo.polygon": [[10, "module-tryalgo.polygon", false]], "tryalgo.predictive_text": [[10, "module-tryalgo.predictive_text", false]], "tryalgo.primes": [[10, "module-tryalgo.primes", false]], "tryalgo.rabin_karp": [[10, "module-tryalgo.rabin_karp", false]], "tryalgo.range_minimum_query": [[10, "module-tryalgo.range_minimum_query", false]], "tryalgo.rectangles_from_grid": [[10, "module-tryalgo.rectangles_from_grid", false]], "tryalgo.rectangles_from_histogram": [[10, "module-tryalgo.rectangles_from_histogram", false]], "tryalgo.rectangles_from_points": [[10, "module-tryalgo.rectangles_from_points", false]], "tryalgo.roman_numbers": [[10, "module-tryalgo.roman_numbers", false]], "tryalgo.scalar": [[10, "module-tryalgo.scalar", false]], "tryalgo.sequence": [[10, "module-tryalgo.Sequence", false]], "tryalgo.shortest_cycle": [[10, "module-tryalgo.shortest_cycle", false]], "tryalgo.skip_list": [[10, "module-tryalgo.skip_list", false]], "tryalgo.strongly_connected_components": [[10, "module-tryalgo.strongly_connected_components", false]], "tryalgo.subsetsum": [[10, "module-tryalgo.subsetsum", false]], "tryalgo.subsetsum_divide": [[10, "module-tryalgo.subsetsum_divide", false]], "tryalgo.sudoku": [[10, "module-tryalgo.sudoku", false]], "tryalgo.suffix_array": [[10, "module-tryalgo.suffix_array", false]], "tryalgo.three_partition": [[10, "module-tryalgo.three_partition", false]], "tryalgo.topological_order": [[10, "module-tryalgo.topological_order", false]], "tryalgo.tortoise_hare": [[10, "module-tryalgo.tortoise_hare", false]], "tryalgo.trie": [[10, "module-tryalgo.trie", false]], "tryalgo.two_sat": [[10, "module-tryalgo.two_sat", false]], "tryalgo.union_rectangles": [[10, "module-tryalgo.union_rectangles", false]], "tryalgo.windows_k_distinct": [[10, "module-tryalgo.windows_k_distinct", false]], "two_sat() (in module tryalgo.two_sat)": [[10, "tryalgo.two_sat.two_sat", false]], "union() (tryalgo.kruskal.unionfind method)": [[10, "tryalgo.kruskal.UnionFind.union", false]], "union_intervals() (in module tryalgo.union_rectangles)": [[10, "tryalgo.union_rectangles.union_intervals", false]], "union_rectangles() (in module tryalgo.union_rectangles)": [[10, "tryalgo.union_rectangles.union_rectangles", false]], "union_rectangles_fast() (in module tryalgo.union_rectangles)": [[10, "tryalgo.union_rectangles.union_rectangles_fast", false]], "union_rectangles_fastest() (in module tryalgo.union_rectangles)": [[10, "tryalgo.union_rectangles.union_rectangles_fastest", false]], "union_rectangles_naive() (in module tryalgo.union_rectangles)": [[10, "tryalgo.union_rectangles.union_rectangles_naive", false]], "unionfind (class in tryalgo.kruskal)": [[10, "tryalgo.kruskal.UnionFind", false]], "up() (tryalgo.our_heap.ourheap method)": [[10, "tryalgo.our_heap.OurHeap.up", false]], "update() (tryalgo.fenwick.fenwickmin method)": [[10, "tryalgo.fenwick.FenwickMin.update", false]], "update() (tryalgo.our_heap.ourheap method)": [[10, "tryalgo.our_heap.OurHeap.update", false]], "val (tryalgo.skip_list.sorteddict.node attribute)": [[10, "tryalgo.skip_list.SortedDict.Node.val", false]], "windows_k_distinct() (in module tryalgo.windows_k_distinct)": [[10, "tryalgo.windows_k_distinct.windows_k_distinct", false]], "write_cycle() (in module tryalgo.eulerian_tour)": [[10, "tryalgo.eulerian_tour.write_cycle", false]], "write_graph() (in module tryalgo.graph)": [[10, "tryalgo.graph.write_graph", false]]}, "objects": {"": [[10, 0, 0, "-", "tryalgo"]], "tryalgo": [[10, 0, 0, "-", "PC_tree"], [10, 0, 0, "-", "Sequence"], [10, 0, 0, "-", "a_star"], [10, 0, 0, "-", "anagrams"], [10, 0, 0, "-", "arithm"], [10, 0, 0, "-", "arithm_expr_eval"], [10, 0, 0, "-", "arithm_expr_target"], [10, 0, 0, "-", "bellman_ford"], [10, 0, 0, "-", "bfs"], [10, 0, 0, "-", "biconnected_components"], [10, 0, 0, "-", "binary_search"], [10, 0, 0, "-", "bipartite_matching"], [10, 0, 0, "-", "bipartite_vertex_cover"], [10, 0, 0, "-", "closest_points"], [10, 0, 0, "-", "closest_values"], [10, 0, 0, "-", "convex_hull"], [10, 0, 0, "-", "dancing_links"], [10, 0, 0, "-", "dfs"], [10, 0, 0, "-", "dijkstra"], [10, 0, 0, "-", "dilworth"], [10, 0, 0, "-", "dinic"], [10, 0, 0, "-", "dist_grid"], [10, 0, 0, "-", "dyn_prog_tricks"], [10, 0, 0, "-", "edmonds_karp"], [10, 0, 0, "-", "eulerian_tour"], [10, 0, 0, "-", "fast_exponentiation"], [10, 0, 0, "-", "fenwick"], [10, 0, 0, "-", "fft"], [10, 0, 0, "-", "floyd_warshall"], [10, 0, 0, "-", "ford_fulkerson"], [10, 0, 0, "-", "freivalds"], [10, 0, 0, "-", "gale_shapley"], [10, 0, 0, "-", "gauss_jordan"], [10, 0, 0, "-", "graph"], [10, 0, 0, "-", "graph01"], [10, 0, 0, "-", "hamiltonian_cycle"], [10, 0, 0, "-", "horn_sat"], [10, 0, 0, "-", "huffman"], [10, 0, 0, "-", "interval_cover"], [10, 0, 0, "-", "interval_tree"], [10, 0, 0, "-", "intervals_union"], [10, 0, 0, "-", "karatsuba"], [10, 0, 0, "-", "knapsack"], [10, 0, 0, "-", "knuth_morris_pratt"], [10, 0, 0, "-", "kruskal"], [10, 0, 0, "-", "kuhn_munkres"], [10, 0, 0, "-", "kuhn_munkres_n4"], [10, 0, 0, "-", "laser_mirrors"], [10, 0, 0, "-", "left_right_inversions"], [10, 0, 0, "-", "levenshtein"], [10, 0, 0, "-", "longest_common_subsequence"], [10, 0, 0, "-", "longest_increasing_subsequence"], [10, 0, 0, "-", "lowest_common_ancestor"], [10, 0, 0, "-", "majority"], [10, 0, 0, "-", "manacher"], [10, 0, 0, "-", "matrix_chain_mult"], [10, 0, 0, "-", "max_interval_intersec"], [10, 0, 0, "-", "merge_ordered_lists"], [10, 0, 0, "-", "min_mean_cycle"], [10, 0, 0, "-", "next_permutation"], [10, 0, 0, "-", "our_heap"], [10, 0, 0, "-", "our_queue"], [10, 0, 0, "-", "our_std"], [10, 0, 0, "-", "pareto"], [10, 0, 0, "-", "partition_refinement"], [10, 0, 0, "-", "permutation_rank"], [10, 0, 0, "-", "polygon"], [10, 0, 0, "-", "predictive_text"], [10, 0, 0, "-", "primes"], [10, 0, 0, "-", "rabin_karp"], [10, 0, 0, "-", "range_minimum_query"], [10, 0, 0, "-", "rectangles_from_grid"], [10, 0, 0, "-", "rectangles_from_histogram"], [10, 0, 0, "-", "rectangles_from_points"], [10, 0, 0, "-", "roman_numbers"], [10, 0, 0, "-", "scalar"], [10, 0, 0, "-", "shortest_cycle"], [10, 0, 0, "-", "skip_list"], [10, 0, 0, "-", "strongly_connected_components"], [10, 0, 0, "-", "subsetsum"], [10, 0, 0, "-", "subsetsum_divide"], [10, 0, 0, "-", "sudoku"], [10, 0, 0, "-", "suffix_array"], [10, 0, 0, "-", "three_partition"], [10, 0, 0, "-", "topological_order"], [10, 0, 0, "-", "tortoise_hare"], [10, 0, 0, "-", "trie"], [10, 0, 0, "-", "two_sat"], [10, 0, 0, "-", "union_rectangles"], [10, 0, 0, "-", "windows_k_distinct"]], "tryalgo.PC_tree": [[10, 1, 1, "", "C_node"], [10, 3, 1, "", "Infeasible"], [10, 1, 1, "", "Leaf"], [10, 1, 1, "", "Node"], [10, 1, 1, "", "PC_tree"], [10, 1, 1, "", "P_node"]], "tryalgo.PC_tree.C_node": [[10, 2, 1, "", "clean"], [10, 2, 1, "", "detach"], [10, 2, 1, "", "flip"], [10, 2, 1, "", "frontier"], [10, 2, 1, "", "represent"], [10, 2, 1, "", "signal_full"], [10, 2, 1, "", "split"], [10, 2, 1, "", "to_signal"]], "tryalgo.PC_tree.Leaf": [[10, 2, 1, "", "attach"], [10, 2, 1, "", "clean"], [10, 2, 1, "", "detach"], [10, 2, 1, "", "frontier"], [10, 2, 1, "", "is_full"], [10, 2, 1, "", "to_signal"]], "tryalgo.PC_tree.Node": [[10, 2, 1, "", "attach"], [10, 2, 1, "", "attach_neighbors"], [10, 2, 1, "", "clean"], [10, 2, 1, "", "detach"], [10, 2, 1, "", "detach_bilateral"], [10, 2, 1, "", "is_full"], [10, 2, 1, "", "is_partial"], [10, 2, 1, "", "represent_parent"], [10, 2, 1, "", "signal_full"]], "tryalgo.PC_tree.PC_tree": [[10, 2, 1, "", "frontier"], [10, 2, 1, "", "print_dot"], [10, 2, 1, "", "represent"], [10, 2, 1, "", "restrict"]], "tryalgo.PC_tree.P_node": [[10, 2, 1, "", "clean"], [10, 2, 1, "", "frontier"], [10, 2, 1, "", "represent"], [10, 2, 1, "", "signal_full"], [10, 2, 1, "", "split"], [10, 2, 1, "", "to_signal"]], "tryalgo.Sequence": [[10, 1, 1, "", "Sequence"], [10, 3, 1, "", "SequenceError"]], "tryalgo.Sequence.Sequence": [[10, 2, 1, "", "add"], [10, 2, 1, "", "insertAfter"], [10, 2, 1, "", "insertBefore"], [10, 2, 1, "", "key"], [10, 2, 1, "", "predecessor"], [10, 2, 1, "", "remove"], [10, 2, 1, "", "replace"], [10, 2, 1, "", "successor"]], "tryalgo.a_star": [[10, 4, 1, "", "a_star"]], "tryalgo.anagrams": [[10, 4, 1, "", "anagrams"]], "tryalgo.arithm": [[10, 4, 1, "", "bezout"], [10, 4, 1, "", "binom"], [10, 4, 1, "", "binom_modulo"], [10, 4, 1, "", "inv"], [10, 4, 1, "", "pgcd"]], "tryalgo.arithm_expr_eval": [[10, 4, 1, "", "arithm_expr_eval"], [10, 4, 1, "", "arithm_expr_parse"]], "tryalgo.arithm_expr_target": [[10, 4, 1, "", "arithm_expr_target"]], "tryalgo.bellman_ford": [[10, 4, 1, "", "bellman_ford"], [10, 4, 1, "", "bellman_ford2"]], "tryalgo.bfs": [[10, 4, 1, "", "bfs"], [10, 4, 1, "", "bfs_implicit"]], "tryalgo.biconnected_components": [[10, 4, 1, "", "cut_nodes_edges"], [10, 4, 1, "", "cut_nodes_edges2"]], "tryalgo.binary_search": [[10, 4, 1, "", "continuous_binary_search"], [10, 4, 1, "", "discrete_binary_search"], [10, 4, 1, "", "optimized_binary_search"], [10, 4, 1, "", "optimized_binary_search_lower"], [10, 4, 1, "", "ternary_search"]], "tryalgo.bipartite_matching": [[10, 4, 1, "", "max_bipartite_matching"]], "tryalgo.bipartite_vertex_cover": [[10, 4, 1, "", "bipartite_vertex_cover"]], "tryalgo.closest_points": [[10, 4, 1, "", "closest_points"]], "tryalgo.closest_values": [[10, 4, 1, "", "closest_values"]], "tryalgo.convex_hull": [[10, 4, 1, "", "andrew"]], "tryalgo.dancing_links": [[10, 4, 1, "", "dancing_links"]], "tryalgo.dfs": [[10, 4, 1, "", "dfs_grid"], [10, 4, 1, "", "dfs_grid_recursive"], [10, 4, 1, "", "dfs_iterative"], [10, 4, 1, "", "dfs_recursive"], [10, 4, 1, "", "dfs_tree"], [10, 4, 1, "", "find_cycle"], [10, 4, 1, "", "is_bipartite"]], "tryalgo.dijkstra": [[10, 4, 1, "", "dijkstra"], [10, 4, 1, "", "dijkstra_update_heap"]], "tryalgo.dilworth": [[10, 4, 1, "", "dilworth"]], "tryalgo.dinic": [[10, 4, 1, "", "dinic"]], "tryalgo.dist_grid": [[10, 4, 1, "", "dist_grid"]], "tryalgo.dyn_prog_tricks": [[10, 4, 1, "", "decode_root_matrix_to_level"], [10, 4, 1, "", "dyn_prog_Monge"], [10, 4, 1, "", "opt_bin_search_tree1"], [10, 4, 1, "", "opt_bin_search_tree2"]], "tryalgo.edmonds_karp": [[10, 4, 1, "", "edmonds_karp"]], "tryalgo.eulerian_tour": [[10, 4, 1, "", "eulerian_tour_directed"], [10, 4, 1, "", "eulerian_tour_undirected"], [10, 4, 1, "", "is_eulerian_tour_directed"], [10, 4, 1, "", "is_eulerian_tour_undirected"], [10, 4, 1, "", "random_eulerien_graph"], [10, 4, 1, "", "write_cycle"]], "tryalgo.fast_exponentiation": [[10, 4, 1, "", "fast_exponentiation"], [10, 4, 1, "", "fast_exponentiation2"]], "tryalgo.fenwick": [[10, 1, 1, "", "Fenwick"], [10, 1, 1, "", "FenwickMin"]], "tryalgo.fenwick.Fenwick": [[10, 2, 1, "", "add"], [10, 2, 1, "", "get"], [10, 2, 1, "", "intervalAdd"], [10, 2, 1, "", "intervalSum"], [10, 2, 1, "", "prefixSum"]], "tryalgo.fenwick.FenwickMin": [[10, 2, 1, "", "prefixMin"], [10, 2, 1, "", "update"]], "tryalgo.fft": [[10, 4, 1, "", "fft"], [10, 4, 1, "", "inv_fft"], [10, 4, 1, "", "mul_poly_fft"], [10, 4, 1, "", "pad"]], "tryalgo.floyd_warshall": [[10, 4, 1, "", "floyd_warshall"], [10, 4, 1, "", "floyd_warshall2"]], "tryalgo.ford_fulkerson": [[10, 4, 1, "", "ford_fulkerson"]], "tryalgo.freivalds": [[10, 4, 1, "", "freivalds"]], "tryalgo.gale_shapley": [[10, 4, 1, "", "gale_shapley"]], "tryalgo.gauss_jordan": [[10, 4, 1, "", "gauss_jordan"]], "tryalgo.graph": [[10, 1, 1, "", "GraphNamedVertices"], [10, 4, 1, "", "add_reverse_arcs"], [10, 4, 1, "", "dictdict_to_listdict"], [10, 4, 1, "", "extract_path"], [10, 4, 1, "", "listdict_to_listlist_and_matrix"], [10, 4, 1, "", "listlist_and_matrix_to_listdict"], [10, 4, 1, "", "make_flow_labels"], [10, 4, 1, "", "matrix_to_listlist"], [10, 4, 1, "", "read_graph"], [10, 4, 1, "", "readtab"], [10, 4, 1, "", "readval"], [10, 4, 1, "", "tree_adj_to_prec"], [10, 4, 1, "", "tree_prec_to_adj"], [10, 4, 1, "", "write_graph"]], "tryalgo.graph.GraphNamedVertices": [[10, 2, 1, "", "add_arc"], [10, 2, 1, "", "add_edge"], [10, 2, 1, "", "add_node"]], "tryalgo.graph01": [[10, 4, 1, "", "dist01"]], "tryalgo.hamiltonian_cycle": [[10, 4, 1, "", "hamiltonian_cycle"]], "tryalgo.horn_sat": [[10, 4, 1, "", "horn_sat"], [10, 4, 1, "", "read"]], "tryalgo.huffman": [[10, 4, 1, "", "extract"], [10, 4, 1, "", "huffman"]], "tryalgo.interval_cover": [[10, 4, 1, "", "interval_cover"]], "tryalgo.interval_tree": [[10, 4, 1, "", "interval_tree"], [10, 4, 1, "", "intervals_containing"]], "tryalgo.intervals_union": [[10, 4, 1, "", "intervals_union"]], "tryalgo.karatsuba": [[10, 4, 1, "", "add_poly"], [10, 4, 1, "", "eval_poly"], [10, 4, 1, "", "mul_poly"], [10, 4, 1, "", "sub_poly"]], "tryalgo.knapsack": [[10, 4, 1, "", "knapsack"], [10, 4, 1, "", "knapsack2"]], "tryalgo.knuth_morris_pratt": [[10, 4, 1, "", "knuth_morris_pratt"], [10, 4, 1, "", "maximum_border_length"], [10, 4, 1, "", "powerstring_by_border"], [10, 4, 1, "", "powerstring_by_find"]], "tryalgo.kruskal": [[10, 1, 1, "", "UnionFind"], [10, 4, 1, "", "dist"], [10, 4, 1, "", "kruskal"]], "tryalgo.kruskal.UnionFind": [[10, 2, 1, "", "find"], [10, 2, 1, "", "union"]], "tryalgo.kuhn_munkres": [[10, 4, 1, "", "kuhn_munkres"]], "tryalgo.kuhn_munkres_n4": [[10, 4, 1, "", "kuhn_munkres"]], "tryalgo.laser_mirrors": [[10, 4, 1, "", "laser_mirrors"], [10, 4, 1, "", "solve"]], "tryalgo.left_right_inversions": [[10, 4, 1, "", "left_right_inversions"]], "tryalgo.levenshtein": [[10, 4, 1, "", "levenshtein"]], "tryalgo.longest_common_subsequence": [[10, 4, 1, "", "longest_common_subsequence"]], "tryalgo.longest_increasing_subsequence": [[10, 4, 1, "", "longest_increasing_subsequence"]], "tryalgo.lowest_common_ancestor": [[10, 1, 1, "", "LowestCommonAncestorRMQ"], [10, 1, 1, "", "LowestCommonAncestorShortcuts"], [10, 4, 1, "", "log2ceil"], [10, 4, 1, "", "log2floor"]], "tryalgo.lowest_common_ancestor.LowestCommonAncestorRMQ": [[10, 2, 1, "", "query"]], "tryalgo.lowest_common_ancestor.LowestCommonAncestorShortcuts": [[10, 2, 1, "", "query"]], "tryalgo.majority": [[10, 4, 1, "", "majority"]], "tryalgo.manacher": [[10, 4, 1, "", "manacher"]], "tryalgo.matrix_chain_mult": [[10, 4, 1, "", "matrix_chain_mult"], [10, 4, 1, "", "matrix_mult_opt_order"]], "tryalgo.max_interval_intersec": [[10, 4, 1, "", "max_interval_intersec"]], "tryalgo.merge_ordered_lists": [[10, 4, 1, "", "merge"]], "tryalgo.min_mean_cycle": [[10, 4, 1, "", "min_mean_cycle"]], "tryalgo.next_permutation": [[10, 4, 1, "", "convert"], [10, 4, 1, "", "next_permutation"], [10, 4, 1, "", "solve_word_addition"]], "tryalgo.our_heap": [[10, 1, 1, "", "OurHeap"]], "tryalgo.our_heap.OurHeap": [[10, 2, 1, "", "down"], [10, 2, 1, "", "pop"], [10, 2, 1, "", "push"], [10, 2, 1, "", "up"], [10, 2, 1, "", "update"]], "tryalgo.our_queue": [[10, 1, 1, "", "OurQueue"]], "tryalgo.our_queue.OurQueue": [[10, 2, 1, "", "pop"], [10, 2, 1, "", "push"]], "tryalgo.our_std": [[10, 4, 1, "", "readarray"], [10, 4, 1, "", "readint"], [10, 4, 1, "", "readmatrix"], [10, 4, 1, "", "readstr"]], "tryalgo.pareto": [[10, 4, 1, "", "pareto2d"], [10, 4, 1, "", "pareto3d"]], "tryalgo.partition_refinement": [[10, 1, 1, "", "PartitionRefinement"]], "tryalgo.partition_refinement.PartitionRefinement": [[10, 2, 1, "", "order"], [10, 2, 1, "", "refine"], [10, 2, 1, "", "tolist"]], "tryalgo.permutation_rank": [[10, 4, 1, "", "permutation_rank"], [10, 4, 1, "", "rank_permutation"]], "tryalgo.polygon": [[10, 4, 1, "", "area"], [10, 4, 1, "", "is_simple"]], "tryalgo.predictive_text": [[10, 4, 1, "", "predictive_text"], [10, 4, 1, "", "propose"]], "tryalgo.primes": [[10, 4, 1, "", "eratosthene"], [10, 4, 1, "", "gries_misra"]], "tryalgo.rabin_karp": [[10, 4, 1, "", "matches"], [10, 4, 1, "", "rabin_karp_factor"], [10, 4, 1, "", "rabin_karp_matching"], [10, 4, 1, "", "roll_hash"]], "tryalgo.range_minimum_query": [[10, 1, 1, "", "LazySegmentTree"], [10, 1, 1, "", "RangeMinQuery"]], "tryalgo.range_minimum_query.LazySegmentTree": [[10, 2, 1, "", "add"], [10, 2, 1, "", "max"], [10, 2, 1, "", "min"], [10, 2, 1, "", "set"], [10, 2, 1, "", "sum"]], "tryalgo.range_minimum_query.RangeMinQuery": [[10, 2, 1, "", "range_min"]], "tryalgo.rectangles_from_grid": [[10, 4, 1, "", "rectangles_from_grid"]], "tryalgo.rectangles_from_histogram": [[10, 4, 1, "", "rectangles_from_histogram"]], "tryalgo.rectangles_from_points": [[10, 4, 1, "", "rectangles_from_points"]], "tryalgo.roman_numbers": [[10, 4, 1, "", "int2roman"], [10, 4, 1, "", "roman2int"]], "tryalgo.scalar": [[10, 4, 1, "", "min_scalar_prod"]], "tryalgo.shortest_cycle": [[10, 4, 1, "", "powergraph"], [10, 4, 1, "", "shortest_cycle"]], "tryalgo.skip_list": [[10, 1, 1, "", "AbstractSkipList"], [10, 1, 1, "", "SortedDict"], [10, 1, 1, "", "SortedSet"], [10, 4, 1, "", "random"]], "tryalgo.skip_list.AbstractSkipList": [[10, 2, 1, "", "find"], [10, 2, 1, "", "getkth"], [10, 2, 1, "", "insert"], [10, 2, 1, "", "lastKey"], [10, 2, 1, "", "nextKey"], [10, 2, 1, "", "nextNode"], [10, 2, 1, "", "randomHeight"], [10, 2, 1, "", "remove"]], "tryalgo.skip_list.SortedDict": [[10, 1, 1, "", "Node"], [10, 2, 1, "", "keys"]], "tryalgo.skip_list.SortedDict.Node": [[10, 5, 1, "", "count"], [10, 5, 1, "", "key"], [10, 5, 1, "", "next"], [10, 5, 1, "", "val"]], "tryalgo.skip_list.SortedSet": [[10, 1, 1, "", "Node"], [10, 2, 1, "", "add"], [10, 2, 1, "", "pop"]], "tryalgo.skip_list.SortedSet.Node": [[10, 5, 1, "", "count"], [10, 5, 1, "", "key"], [10, 5, 1, "", "next"]], "tryalgo.strongly_connected_components": [[10, 4, 1, "", "kosaraju"], [10, 4, 1, "", "reverse"], [10, 4, 1, "", "tarjan"], [10, 4, 1, "", "tarjan_recursif"]], "tryalgo.subsetsum": [[10, 4, 1, "", "coin_change"], [10, 4, 1, "", "subset_sum"]], "tryalgo.subsetsum_divide": [[10, 4, 1, "", "part_sum"], [10, 4, 1, "", "part_sum2"], [10, 4, 1, "", "subset_sum"], [10, 4, 1, "", "subset_sum2"]], "tryalgo.sudoku": [[10, 4, 1, "", "sudoku"]], "tryalgo.suffix_array": [[10, 4, 1, "", "sort_class"], [10, 4, 1, "", "sort_cyclic_shifts"], [10, 4, 1, "", "suffix_array"]], "tryalgo.three_partition": [[10, 4, 1, "", "three_partition"]], "tryalgo.topological_order": [[10, 4, 1, "", "topological_order"], [10, 4, 1, "", "topological_order_dfs"]], "tryalgo.tortoise_hare": [[10, 4, 1, "", "tortoise_hare"]], "tryalgo.trie": [[10, 4, 1, "", "Trie"], [10, 1, 1, "", "TrieNode"], [10, 4, 1, "", "add"], [10, 4, 1, "", "search"], [10, 4, 1, "", "spell_check"]], "tryalgo.two_sat": [[10, 4, 1, "", "two_sat"]], "tryalgo.union_rectangles": [[10, 1, 1, "", "CoverQuery"], [10, 4, 1, "", "rectangles_contains_point"], [10, 4, 1, "", "union_intervals"], [10, 4, 1, "", "union_rectangles"], [10, 4, 1, "", "union_rectangles_fast"], [10, 4, 1, "", "union_rectangles_fastest"], [10, 4, 1, "", "union_rectangles_naive"]], "tryalgo.union_rectangles.CoverQuery": [[10, 2, 1, "", "change"], [10, 2, 1, "", "cover"]], "tryalgo.windows_k_distinct": [[10, 4, 1, "", "windows_k_distinct"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function", "5": "py:attribute"}, "terms": {"": [4, 7, 10], "0": [1, 3, 4, 7, 8, 10], "00": [3, 8], "000": [3, 8], "0001": 10, "01": 10, "06": 10, "09": 10, "1": [1, 4, 7, 10], "10": [7, 10], "100": 0, "11": [1, 7, 10], "128": 5, "15": 10, "1e": 10, "2": [3, 4, 7, 8, 10], "2003": 10, "2011": 10, "2012": 10, "2013": 10, "2014": 10, "2015": 10, "2016": 10, "2017": 10, "2018": 10, "2019": 10, "2020": 10, "2022": 10, "2023": 10, "2024": 10, "225": 4, "25": [0, 10], "29": [1, 7], "2k": 10, "2m": 10, "2n": 10, "3": [0, 1, 4, 7, 10], "4": [4, 7, 10], "45": 4, "5": [1, 7], "50": 0, "5000": 10, "585": [4, 10], "6": [0, 1, 7], "7": 7, "75": 0, "8": 7, "9": [4, 7, 10], "952": 0, "9999": 10, "9x9": 10, "A": [4, 10], "And": 4, "But": [4, 10], "For": [4, 7], "If": [4, 7, 10], "In": [4, 7, 10], "It": 4, "Its": 4, "One": 4, "Such": 4, "The": [4, 6, 7, 10], "Then": 10, "There": 4, "These": [4, 10], "Will": 7, "With": [4, 5], "_": 7, "__str__": 10, "_p": 10, "a_star": [4, 9], "ab": [4, 10], "abaa": 10, "abc": 10, "abcbabcba": 7, "about": 10, "abov": [4, 7, 10], "abraham": 10, "absolut": 10, "abstract": 10, "abstractskiplist": [9, 10], "abx": 4, "ac": 10, "accept": 4, "access": [4, 10], "accord": 10, "act": 10, "actual": 10, "acycl": [4, 10], "ad": [4, 10], "adapt": [4, 10], "add": [4, 9, 10], "add_arc": [9, 10], "add_edg": [9, 10], "add_nod": [9, 10], "add_poli": [9, 10], "add_reverse_arc": [9, 10], "addit": [4, 10], "adjac": [4, 7, 10], "advantag": 4, "after": [4, 10], "again": 4, "ainsi": 10, "algorithm": [5, 7, 10], "alia": 10, "all": [2, 4, 8, 10], "allow": [4, 10], "along": [4, 10], "alreadi": 10, "also": [4, 7], "altern": [4, 10], "among": 4, "amort": [4, 10], "an": [1, 4, 7, 10], "anagram": [4, 9], "analysi": 4, "ancestor": [4, 10], "andrew": [4, 9, 10], "angl": 4, "ani": [4, 10], "annot": 10, "anoth": [4, 10], "answer": 4, "anteced": 4, "appear": 10, "append": [7, 10], "appli": [4, 10], "applic": 4, "approach": [4, 10], "ar": [2, 4, 5, 7, 10], "arbitrari": [4, 10], "arc": [4, 7, 10], "arc_label": 10, "arc_marc": 10, "arc_mark": 10, "area": [4, 9, 10], "arg": 10, "argument": 10, "arithm": [4, 9], "arithm_expr_ev": [4, 9], "arithm_expr_pars": [9, 10], "arithm_expr_target": [0, 3, 4, 8, 9], "arithmet": [5, 10], "arrai": [5, 10], "ask": 4, "ass": 10, "assert": 10, "assign": 10, "associ": 10, "assum": [4, 10], "assumpt": 10, "attach": [4, 9, 10], "attach_neighbor": [9, 10], "attack": 4, "attribut": 10, "au": 5, "augment": 4, "auto_exampl": 3, "auto_examples_jupyt": 2, "auto_examples_python": 2, "avail": 5, "averag": 10, "avoid": 4, "avoir": 5, "ax": 10, "b": [4, 10], "babcbabcbaccba": 7, "back": 10, "backtrack": 5, "bag": 10, "base": [1, 4, 10], "basic": 5, "beam": [4, 10], "becaus": [1, 7], "becom": 10, "been": [4, 10], "befor": [4, 10], "behavior": 10, "behind": 0, "being": 10, "bellman": [4, 10], "bellman_ford": [4, 9], "bellman_ford2": [9, 10], "belong": 7, "below": 10, "benelmir": 10, "best": 4, "better": 10, "between": [4, 10], "bewar": 10, "bezot": 4, "bezout": [9, 10], "bf": [4, 9], "bfs_implicit": [4, 9, 10], "bgu": 10, "bi": 10, "biconnect": 4, "biconnected_compon": [4, 9], "big": 10, "bigraph": 10, "bin": 7, "binari": [4, 10], "binary_search": [4, 9], "binom": [9, 10], "binom_modulo": [9, 10], "binomi": [4, 10], "biparti": 10, "bipartit": [4, 10], "bipartite_match": [4, 9], "bipartite_vertex_cov": [4, 9], "bit": [4, 10], "biton": [4, 10], "black": 10, "blog": [0, 1, 10], "book": [4, 5], "bool": 10, "boolean": [4, 10], "bord": 10, "border": [4, 10], "both": [4, 7, 10], "bottom": 10, "bound": [4, 10], "breadth": [4, 10], "break": 10, "breath": 4, "brute": 4, "build": [4, 10], "built": 10, "b\u00e9zout": 10, "c": [4, 10], "c_node": [9, 10], "cach": 4, "call": [4, 7, 10], "can": [4, 6, 7, 10], "cannot": 10, "canon": 4, "capac": [4, 10], "cardin": [4, 10], "case": [4, 10], "cdot": 4, "cell": [4, 10], "centr\u00e9": 10, "chain": 10, "chang": [2, 3, 4, 5, 8, 9, 10], "chaqu": 10, "charact": 10, "cha\u00een": 10, "check": [4, 10], "checker": 4, "choic": 4, "choos": [4, 10], "chosen": 10, "christoph": 10, "circuit": 10, "circular": 10, "class": [4, 10], "classic": 4, "claus": 10, "clause_with_negvar": 10, "clean": [9, 10], "clear": 10, "close": [4, 10], "closest": [4, 10], "closest_point": [4, 9], "closest_valu": [4, 9], "cl\u00e9menc": 1, "cmax": 10, "code": [0, 1, 2, 4, 7, 10], "cod\u00e9": 5, "coeffici": [4, 10], "coin": [2, 3, 4, 5, 8, 10], "coin_chang": [1, 3, 7, 8, 9, 10], "col": 10, "collect": 4, "color": 10, "column": 10, "com": 10, "combin": [7, 10], "come": 10, "comment": 10, "common": [4, 10], "commun": 4, "compar": 10, "complementari": 10, "complet": [4, 10], "complex": [4, 10], "complex_index": 10, "complexit\u00e9": 10, "compon": [4, 10], "composant": 10, "compri": 5, "comput": [4, 5, 7, 10], "concaten": 4, "concern": 4, "condit": 10, "connect": [4, 10], "connex": 10, "conquer": 4, "consecut": [4, 10], "consid": 10, "consist": [4, 6, 10], "constant": 10, "constraint": [4, 10], "construct": [4, 10], "contain": [4, 6, 7, 10], "content": [5, 9], "contest": 10, "continuous_binary_search": [9, 10], "contrast": 4, "conveni": 4, "convert": [4, 9, 10], "convex": [4, 10], "convex_hul": [4, 9], "coordin": [4, 10], "copi": 4, "copyright": 10, "corner": [4, 10], "correcteur": 10, "correctli": 10, "correspond": [4, 10], "cost": [4, 7, 10], "could": 10, "count": 10, "countdown": [2, 3, 8], "counter": 10, "coupl": 10, "cour": 5, "cover": [4, 9, 10], "coverqueri": [9, 10], "creat": 10, "cryptogram": 10, "current": [4, 10], "cut": [4, 10], "cut_nodes_edg": [9, 10], "cut_nodes_edges2": [9, 10], "cute": 4, "cx": 4, "cycl": [5, 10], "cycle_len": 10, "cyclic": 10, "d": [4, 10], "dag": 10, "danc": [4, 10], "dancing_link": [4, 9], "data": [5, 7, 10], "david": 4, "de": [1, 5, 10], "decid": [4, 10], "decod": 10, "decode_root_matrix_to_level": [9, 10], "decompos": 10, "decomposit": 4, "decreas": 10, "default": 10, "default_weight": 10, "defin": [4, 10], "degre": [4, 10], "delet": [4, 10], "depth": [4, 10], "dequ": 4, "descend": 4, "descent": 10, "describ": [7, 10], "destin": 4, "detach": [9, 10], "detach_bilater": [9, 10], "detect": [4, 10], "determin": [4, 10], "df": [4, 9], "dfs_grid": [9, 10], "dfs_grid_recurs": [9, 10], "dfs_iter": [9, 10], "dfs_recurs": [9, 10], "dfs_tree": [9, 10], "dic": 10, "dict": 10, "dictdict": 4, "dictdict_to_listdict": [4, 9, 10], "dictgraph": 10, "dictionari": [4, 7, 10], "differ": [4, 10], "digit": 4, "dijkstra": [4, 7, 9], "dijkstra_update_heap": [9, 10], "dilworth": [4, 9], "dimens": [4, 10], "dimension": 10, "dinic": [4, 9], "direc": 10, "direct": [4, 10], "directori": 6, "discov": 10, "discrete_binary_search": [9, 10], "disjoint": [4, 10], "dist": [7, 9, 10], "dist01": [9, 10], "dist_grid": [4, 9], "distanc": [4, 7, 10], "distinct": [4, 10], "divid": 4, "divisor": [4, 10], "do": 10, "document": 4, "doe": [4, 10], "domain": 10, "domin": [4, 10], "done": [4, 10], "dot": [4, 10], "dotfil": 10, "doubl": 4, "doubli": 10, "down": [9, 10], "download": [0, 1, 2, 6], "droit": 10, "ds112": 10, "ds112_ps7": 10, "dual": 10, "due": 10, "duplic": 4, "dure": 10, "durr": 10, "dyn_prog_mong": [9, 10], "dyn_prog_trick": [4, 9], "dynam": [4, 7, 10], "dynamiqu": 1, "d\u00fcrr": 10, "e": [4, 10], "each": [4, 10], "eas": 10, "easi": 4, "easili": [4, 10], "edg": [4, 7, 10], "edit": [4, 10], "edmond": [4, 10], "edmonds_karp": [4, 9], "efficac": 5, "effici": 4, "either": 10, "eleg": 4, "element": [4, 10], "els": 10, "empti": 10, "en": [5, 10], "encod": [4, 7, 10], "end": [0, 1, 10], "endpoint": 10, "english": 4, "enough": 10, "enter": [4, 10], "entranc": 10, "entri": 10, "entr\u00e9": 10, "env": 7, "eppstein": [4, 10], "equal": 10, "equat": [4, 10], "eratosthen": [4, 9, 10], "erisa": 10, "error": 4, "est": 10, "et": [5, 10], "euclidean": [4, 10], "eulerian": [4, 10], "eulerian_tour": [4, 9], "eulerian_tour_direct": [9, 10], "eulerian_tour_undirect": [9, 10], "eval_poli": [9, 10], "evalu": [4, 10], "even": [4, 10], "eventu": 10, "everi": [4, 10], "exact": [4, 10], "exactli": [4, 10], "exampl": [0, 1, 3, 4, 5, 7, 8, 10], "exce": 4, "except": 10, "exclud": [7, 10], "execut": [3, 8], "exist": [4, 10], "exit": 10, "expect": [4, 10], "explan": [1, 5, 10], "explor": [4, 10], "exponenti": [4, 10], "expr": 10, "express": [4, 7, 10], "extract": [6, 9, 10], "extract_path": [9, 10], "f": 10, "face": 4, "factor": [4, 10], "fail": 4, "failur": 10, "fals": 10, "famou": 4, "fast": [4, 10], "fast_exponenti": [4, 9], "fast_exponentiation2": [9, 10], "fault": 4, "faut": 5, "fenwick": [4, 9], "fenwickmin": [9, 10], "few": 7, "fft": [4, 9], "fi": 10, "fibonacci": 4, "fictiv": 10, "field": 10, "fifo": 10, "file": [3, 4, 6, 8, 10], "filenam": 10, "fill": 10, "filli\u00e2tr": 10, "final": 4, "find": [4, 7, 9, 10], "find_cycl": [4, 9, 10], "finit": 10, "finn": 10, "first": [4, 7, 10], "flatten": 10, "flip": [9, 10], "float": 10, "flow": [5, 10], "floyd": [4, 10], "floyd_warshal": [4, 9], "floyd_warshall2": [9, 10], "follow": [4, 7, 10], "footnot": 10, "forc": 4, "ford": [4, 10], "ford_fulkerson": [4, 9], "forev": 10, "form": [4, 10], "formal": 7, "format": [4, 7, 10], "formula": [4, 10], "fortement": 10, "found": [4, 10], "fourier": [4, 10], "fraction": 10, "free": 10, "freivald": [4, 9], "french": [1, 4], "freq": 10, "frequenc": [4, 10], "from": [0, 1, 2, 3, 4, 5, 7, 8, 10], "frontier": [9, 10], "fulkerson": [4, 10], "full": [0, 1, 10], "full_neighbor": 10, "fullneighbor": 10, "function": [4, 7, 10], "g": 10, "gale": [4, 10], "gale_shaplei": [4, 9], "galleri": [0, 1, 5, 8], "gap": 10, "gauss": [4, 10], "gauss_jordan": [4, 9], "gcd": 4, "gener": [0, 1, 2, 4, 10], "geometr": 4, "geometri": 5, "geq": 4, "get": [9, 10], "getkth": [9, 10], "github": 5, "give": 10, "given": [1, 4, 10], "go": [0, 1], "goal": 4, "good": 4, "graham": 4, "grai": 10, "grand": 10, "graph": [5, 7, 9], "graph01": [4, 9], "graphnamedvertic": [4, 9, 10], "greatest": [4, 10], "greedi": 4, "gri": [4, 10], "grid": [4, 10], "gries_misra": [9, 10], "ground": 4, "group": 10, "gz": 6, "h": 10, "ha": [4, 10], "had": 4, "half": 10, "hamiltonian": [4, 10], "hamiltonian_cycl": [4, 9], "happen": 4, "hard": 4, "hare": 4, "hashabl": [4, 10], "have": [4, 10], "haystack": 10, "heap": [4, 10], "height": 10, "held": 4, "helper": 4, "henc": [7, 10], "here": [2, 4, 7, 10], "heritag": 10, "hi": 10, "high": 10, "highest": 10, "histogram": [4, 10], "hit": 4, "hope": 4, "horizont": 10, "horn": [4, 10], "horn_sat": [4, 9], "how": [4, 10], "howev": 4, "html": 10, "http": 10, "huffman": [4, 9], "huge": 10, "hull": [4, 10], "hungarian": 4, "i": [1, 4, 7, 10], "id": 10, "identici": 10, "identifi": [4, 10], "iff": 10, "ignor": 10, "ii": 10, "il": [5, 10], "illustr": 4, "implcitli": 4, "implement": [4, 5, 7, 10], "implicit": 4, "implicitli": 10, "implictli": 4, "import": [0, 1, 4, 7], "imposs": 10, "improv": [4, 10], "in_digit": 10, "includ": [4, 10], "inclus": 4, "increas": [4, 10], "ind_ic": 10, "inde": 7, "indegre": 10, "index": [4, 5, 7, 10], "index_t": 10, "indic": [4, 10], "individu": 4, "inequ": 10, "inf": 10, "infeas": [9, 10], "infin": 10, "infinit": [4, 10], "inform": 10, "init": 10, "initi": 10, "inner": 10, "input": [4, 10], "insert": [4, 9, 10], "insertaft": [9, 10], "insertbefor": [9, 10], "insid": 4, "inspir": 10, "instal": 5, "instanti": 10, "instruct": [4, 10], "int": 10, "int2roman": [9, 10], "integ": [4, 10], "intend": 10, "interest": 4, "intermedi": 4, "intersect": [4, 10], "interv": [5, 10], "interval_cov": [4, 9], "interval_tre": [4, 9], "intervaladd": [9, 10], "intervals_contain": [9, 10], "intervals_union": 9, "intervalsum": [9, 10], "inv": [9, 10], "inv_fft": [4, 9, 10], "invari": 10, "invers": [4, 10], "inverse_ackerman": 10, "invert": 10, "invok": 7, "ipynb": [0, 1], "is_bipartit": [4, 9, 10], "is_eulerian_tour_direct": [9, 10], "is_eulerian_tour_undirect": [9, 10], "is_ful": [9, 10], "is_parti": [9, 10], "is_simpl": [4, 9, 10], "item": [4, 10], "iter": [4, 10], "its": [4, 5, 10], "itself": 10, "j": 10, "jean": 10, "jenn": 10, "jill": 10, "jordan": [4, 10], "jupyt": [0, 1, 2], "just": 10, "j\u00eann": 10, "k": [4, 10], "karatsuba": [4, 9], "karp": [4, 10], "keep": 10, "kei": [4, 9, 10], "kept": 10, "knapsack": [4, 9], "knapsack2": [9, 10], "know": [4, 10], "known": [4, 7], "knuth": 10, "knuth_morris_pratt": [4, 9], "koenig": 10, "kohans": 10, "kosaraju": [4, 9, 10], "kruskal": [4, 9], "kuhn": 10, "kuhn_munkr": [4, 9], "kuhn_munkres_n4": 9, "kunigami": 10, "l": 10, "la": 10, "label": [4, 10], "languag": 10, "larg": 4, "largest": [4, 10], "laser": [4, 10], "laser_mirror": [4, 9], "last": 10, "last_po": 10, "lastkei": [9, 10], "lattic": 10, "lazyadd": 10, "lazysegmenttre": [4, 9, 10], "lazyset": 10, "lb": 10, "lceil": [4, 10], "le": [5, 10], "lead": [4, 10], "leaf": [9, 10], "least": [4, 10], "leav": 10, "leetcod": 10, "left": [4, 10], "left_right_invers": 9, "left_sub_tre": 10, "lemair": 10, "len": 10, "length": [4, 10], "less": [4, 10], "lesson": 10, "let": 4, "letter": 4, "level": 10, "levenshtein": [4, 9], "lexicograph": [4, 10], "librari": [5, 6], "licenc": 10, "lightest": 10, "like": 4, "limit": 10, "line": [4, 7, 10], "line_token": 10, "linear": [4, 7, 10], "link": [4, 10], "lin\u00e9air": 10, "list": [4, 7, 10], "listdic": 10, "listdict": [4, 7, 10], "listdict_to_listlist_and_matrix": [4, 9, 10], "listlist": [4, 7, 10], "listlist_and_matrix_to_listdict": [4, 9, 10], "liter": 10, "lo": 10, "log": [4, 10], "log2ceil": [9, 10], "log2floor": [9, 10], "log_2": 10, "logarithm": 4, "loglog": 10, "logsiz": 10, "long": 10, "longest": [4, 5, 10], "longest_common_subsequ": [4, 9], "longest_increasing_subsequ": [4, 9], "look": 4, "loop": 10, "lot": 4, "loui": 10, "low": 10, "lower": 4, "lower_bound": 10, "lowest": [4, 7, 10], "lowest_common_ancestor": [4, 9], "lowestcommonancestorrmq": [9, 10], "lowestcommonancestorshortcut": [9, 10], "lp": 10, "m": 10, "made": 4, "main": 4, "maintain": [4, 10], "maintient": 10, "major": [4, 9], "make": 10, "make_flow_label": [9, 10], "manach": [4, 7, 9], "manag": 10, "mani": [4, 10], "manner": 4, "map": [4, 10], "mark": 10, "match": [5, 9, 10], "mathbb": 10, "matric": [4, 10], "matrix": [4, 7, 10], "matrix_chain_mult": [4, 9], "matrix_mult_opt_ord": [9, 10], "matrix_to_listlist": [4, 9, 10], "matter": 4, "max": [4, 9, 10], "max_bipartite_match": [9, 10], "max_capac": 10, "max_interval_intersec": [4, 9], "maxim": [4, 10], "maximis": 10, "maximum": [4, 10], "maximum_border_length": [4, 9, 10], "maxval": 10, "mb": [3, 8], "mean": [4, 10], "mem": [3, 8], "membership": 10, "memori": 10, "men": 10, "mention": 4, "merg": [4, 9, 10], "merge_ordered_list": [4, 9], "messag": 4, "mesur": 10, "method": [4, 10], "might": [4, 7], "min": [9, 10], "min_mean_cycl": [4, 9], "min_scalar_prod": [9, 10], "minim": [4, 10], "minimum": [4, 10], "minrangequeri": 10, "minu": 10, "minval": 10, "mir": 10, "mirror": [4, 10], "misra": [4, 10], "miss": 4, "mit": 10, "mobil": [4, 10], "modif": 4, "modifi": [4, 10], "modul": [4, 5, 6, 9], "modulo": 10, "monei": 10, "mong": 10, "monnai": 1, "monochromatiqu": 10, "monoton": 10, "more": [4, 10], "morri": 10, "most": [4, 5, 10], "move": 10, "mul_poli": [9, 10], "mul_poly_fft": [4, 9, 10], "multipl": [4, 10], "multipli": [4, 10], "multiset": 10, "munkr": 10, "must": 10, "n": [4, 10], "naiv": [4, 10], "name": [4, 6, 10], "name_to_nod": 10, "name_u": 10, "name_v": 10, "nanpur": 10, "nb_leav": 10, "nc": 4, "necessari": 4, "necessarili": 10, "need": [4, 7, 10], "needl": 10, "neg": [4, 10], "negatif": 10, "negligibli": 4, "negvar": 10, "neighbor": [4, 7, 10], "neighborhood": 10, "network": 4, "networkx": 4, "neutral": 10, "new": 10, "next": [4, 10], "next_permut": [4, 9], "nextkei": [9, 10], "nextnod": [9, 10], "nice": 4, "nk": 10, "nlog": 10, "node": [4, 7, 9, 10], "node_label": 10, "node_mark": 10, "node_to_nam": 10, "nombr": 10, "non": [4, 10], "nondecreas": 10, "none": [4, 7, 10], "nonsens": 10, "normal": 10, "notebook": [0, 1, 2], "noth": 10, "novemb": 10, "now": 7, "np": 4, "number": [4, 10], "numer": 10, "o": [4, 10], "obj": 10, "object": [4, 10], "offset": 10, "old": 10, "old_val": 10, "onc": [4, 10], "one": [4, 10], "ones": 4, "onli": [4, 10], "open": 10, "oper": [4, 10], "opposit": 4, "opt": 10, "opt_bin_search_tree1": [9, 10], "opt_bin_search_tree2": [9, 10], "optim": [4, 10], "optimized_binary_search": [9, 10], "optimized_binary_search_low": [9, 10], "option": 10, "order": [4, 7, 9, 10], "org": 1, "organ": 4, "orien": 10, "orient": [4, 10], "origin": 0, "orthographiqu": 10, "ortiz": 10, "other": [4, 10], "otherwis": 10, "our": [0, 1, 4, 7, 10], "our_heap": [4, 9], "our_queu": [4, 9], "our_std": 9, "ourheap": [9, 10], "ourqueu": [9, 10], "out": 4, "out_digit": 10, "outdeg": 4, "outdegre": 4, "output": [4, 10], "over": [4, 10], "overwrit": 10, "p": [4, 10], "p_node": [9, 10], "packag": [2, 5, 6, 9], "pad": [4, 9, 10], "pair": [4, 10], "palindrom": [4, 5, 10], "param": 10, "paramet": 10, "parent": 10, "parenthesi": 4, "pareto": [4, 9], "pareto2d": [9, 10], "pareto3d": [9, 10], "pariti": 10, "part": [4, 10], "part_sum": [9, 10], "part_sum2": [9, 10], "particular": 4, "partion": 4, "partit": [4, 10], "partition_refin": 9, "partitionrefin": [4, 9, 10], "pascal": 10, "pass": 10, "path": [5, 7, 10], "pathfind": 5, "pattern": 4, "pc": 10, "pc_tree": [4, 9], "pdf": 10, "perfect": 10, "period": [4, 10], "permit": [4, 10], "permuat": 10, "permut": [4, 10], "permutation_rank": 9, "pgcd": [4, 9, 10], "phone": [4, 10], "pip": 5, "pip3": 6, "pivot": 10, "place": 4, "plage": 10, "plain": 10, "plane": 4, "plu": 10, "point": [4, 10], "polygon": [4, 9], "polynomi": [4, 10], "pool": 10, "pop": [9, 10], "posit": [4, 7, 10], "possibl": [4, 7], "possibli": [4, 10], "posvar": 10, "posvar_in_claus": 10, "pour": 10, "pow": 10, "power": [4, 10], "powergraph": [9, 10], "powerstring_by_bord": [9, 10], "powerstring_by_find": [9, 10], "practic": 10, "pratt": 10, "prec": [7, 10], "preced": 10, "precis": 10, "predecessor": [7, 9, 10], "predict": [4, 10], "predictive_text": [4, 9], "prefer": 10, "prefix": [4, 10], "prefixmin": [9, 10], "prefixsum": [9, 10], "premier": 10, "present": [4, 10], "preserv": 10, "previou": 10, "primal": 10, "prime": [4, 9], "print": [1, 4, 7, 10], "print_dot": [9, 10], "prioriti": 4, "probabl": [4, 10], "problem": [4, 5, 10], "probl\u00e8m": 10, "procedur": 4, "process": 10, "proch": 10, "prochain": 10, "produc": [4, 10], "product": [4, 10], "profit": [4, 10], "program": [4, 7, 10], "programm": [1, 5], "project": [5, 10], "prop": 10, "propag": 10, "properti": 10, "proport": 10, "propos": [9, 10], "provid": 4, "pr\u00e9fix": 10, "publish": 10, "purpos": 4, "push": [9, 10], "put": 4, "puzzl": 4, "py": [0, 1, 3, 8, 10], "pypi": 5, "python": [0, 1, 2, 4, 5, 6, 10], "python3": 7, "q": 10, "qu": 5, "quadrangl": 10, "quadrat": 4, "que": 10, "queri": [4, 9, 10], "queue": [4, 10], "qui": 10, "quick": [5, 10], "quit": 4, "r": 10, "r_target": 10, "rabin": [4, 10], "rabin_karp": [4, 9], "rabin_karp_factor": [9, 10], "rabin_karp_match": [9, 10], "rais": 10, "rami": 10, "random": [4, 9, 10], "random_eulerien_graph": [9, 10], "randomheight": [9, 10], "rang": [4, 10], "range_min": [9, 10], "range_minimum_queri": [4, 9], "rangeminqueri": [9, 10], "rank": 10, "rank_permut": [9, 10], "rather": 4, "rayon": 10, "rceil": [4, 10], "reach": [4, 10], "reachabl": 10, "read": [4, 9, 10], "read_graph": [9, 10], "readabl": 4, "readarrai": [9, 10], "readint": [9, 10], "readmatrix": [9, 10], "readstr": [9, 10], "readtab": [9, 10], "readval": [9, 10], "reason": 10, "receiv": 10, "rect": 10, "rectangl": [4, 10], "rectangles_contains_point": [9, 10], "rectangles_from_grid": [4, 9], "rectangles_from_histogram": [4, 9], "rectangles_from_point": [4, 9], "rectangular": [4, 10], "rectilinear": [4, 10], "recurs": [4, 10], "red": 10, "redirect": 10, "reduct": [4, 10], "refer": 4, "refin": [4, 9, 10], "relat": 5, "remov": [4, 9, 10], "render": 10, "rendu": 1, "replac": [9, 10], "repres": [4, 7, 9, 10], "represent": [4, 7, 10], "represent_par": [9, 10], "request": [4, 10], "requir": 10, "reset": 10, "resolut": 4, "respons": 10, "restrict": [9, 10], "result": 4, "return": [0, 4, 7, 10], "revers": [9, 10], "right": [4, 10], "right_sub_tre": 10, "roll": 4, "roll_hash": [9, 10], "roman": [4, 10], "roman2int": [9, 10], "roman_numb": [4, 9], "root": [4, 10], "round": 10, "row": 10, "royc": 4, "run": [4, 10], "r\u00e9da": 1, "r\u00e9f\u00e8rent": 10, "sa": 5, "sai": 4, "same": [4, 10], "sampl": 10, "samuel": 10, "sat": [4, 10], "satisfi": [4, 10], "scalar": [4, 9], "score": 10, "search": [4, 7, 9, 10], "second": 4, "see": [0, 4], "seen": 10, "segement": 10, "segment": [4, 10], "select": [4, 10], "send": 10, "sens": 10, "separ": [4, 10], "seq": 10, "sequenc": [5, 9], "sequenceerror": [9, 10], "set": [5, 9, 10], "setminu": 10, "sever": [4, 6], "shaplei": [4, 10], "shift": 10, "shortcut": 10, "shorter": 10, "shortest": [5, 7, 10], "shortest_cycl": [4, 9], "should": [7, 10], "show": [4, 10], "show_par": 10, "shown": [4, 10], "si": 10, "side": 4, "siev": [4, 10], "sigma": 10, "signal": 10, "signal_ful": [9, 10], "similar": [4, 10], "similarli": 4, "simpl": [4, 10], "simpler": 4, "simpli": 7, "simplic": 4, "simplifi": 10, "singl": 10, "singleton": 10, "size": [4, 10], "size_univers": 10, "skew": 10, "skip": [4, 10], "skip_list": 9, "slack": 10, "slide": [4, 10], "small": [4, 10], "smaller": 4, "smallest": [4, 10], "smart": 4, "so": [4, 10], "sol": 10, "solut": [4, 10], "solv": [4, 9, 10], "solve_word_addit": [9, 10], "some": [2, 4, 10], "sometim": 4, "sort": [4, 10], "sort_class": [9, 10], "sort_cyclic_shift": [9, 10], "sorteddict": [9, 10], "sortedset": [9, 10], "sorti": 10, "sourc": [0, 1, 2, 4, 7, 10], "space": [4, 10], "span": [4, 10], "spars": [7, 10], "speak": 4, "special": 4, "specif": [4, 10], "speedup": 10, "spell": 4, "spell_check": [9, 10], "spellcheck": 10, "sphinx": [0, 1, 2], "split": [4, 9, 10], "squar": [7, 10], "stabl": [4, 10], "stack": 4, "standard": [4, 10], "start": [5, 10], "static": 10, "stdin": 10, "still": 4, "stop": 10, "store": [4, 10], "str": 10, "stream": 10, "strictli": [4, 10], "string": [5, 10], "strongli": [4, 10], "strongly_connected_compon": [4, 9], "structur": [5, 7, 10], "studi": 4, "style": 10, "sub": 4, "sub_poli": [9, 10], "subclass": 10, "subject": 10, "submodul": 9, "subproblem": 10, "subsequ": [4, 10], "subset": [4, 10], "subset_sum": [9, 10], "subset_sum2": [9, 10], "subsetsum": [1, 4, 9], "subsetsum_divid": [4, 9], "substr": [4, 5, 10], "substruct": 4, "subtl": 4, "subtre": 10, "subtruct": 10, "succ": 10, "success": 10, "successor": [9, 10], "sudoku": [4, 9], "suffix": 10, "suffix_arrai": 9, "suffix_t": 10, "sum": [4, 9, 10], "sum_": 10, "sum_u": 10, "sum_v": 10, "summar": 4, "sumval": 10, "suppli": 10, "suppos": [4, 7], "suspendet": 10, "sweep": [4, 10], "sweeplin": [4, 10], "sy": 10, "symbol": 10, "symmetr": 10, "system": [4, 10], "t": [4, 10], "tab": 10, "tabl": [4, 7, 10], "take": [4, 10], "taken": 10, "tar": 6, "tardieu": 10, "target": [4, 10], "tarjan": [4, 9, 10], "tarjan_recursif": [9, 10], "task": 4, "techniqu": [4, 10], "tel": 10, "temp": 10, "termin": 10, "ternari": 10, "ternary_search": [4, 9, 10], "test": [4, 10], "text": [4, 10], "textrm": 10, "th": [4, 10], "than": [4, 10], "thei": [4, 10], "them": 4, "theorem": 10, "thi": [0, 1, 4, 5, 7, 10], "third": 4, "those": [4, 10], "though": 4, "three": 10, "three_partit": 9, "tie": 10, "time": [4, 10], "to_detach": 10, "to_sign": [9, 10], "todo": 10, "token": 10, "toler": 10, "tolist": [9, 10], "top": 10, "topolog": [4, 10], "topological_ord": [4, 9], "topological_order_df": [9, 10], "tortois": 4, "tortoise_har": [4, 9], "total": [3, 4, 8, 10], "tou": 10, "tour": 10, "tp": 10, "trace": 10, "trajectori": 4, "transform": [4, 10], "translat": 5, "travers": 10, "tree": [5, 7, 10], "tree_adj_to_prec": [9, 10], "tree_prec_to_adj": [9, 10], "triangul": 4, "trick": 10, "tricki": 4, "trie": [4, 9], "trienod": [9, 10], "trigonometr": 4, "triplet": 10, "trivial": 10, "trouver": 10, "true": [1, 7, 10], "tryalgo": [0, 1, 2, 4, 6, 7], "tupl": [4, 10], "two": [4, 10], "two_sat": [4, 9], "ty": 10, "typ": 10, "type": [4, 10], "typic": 4, "u": [4, 7, 10], "un": 10, "unbound": 4, "under": [4, 10], "undirect": [4, 10], "union": [4, 9, 10], "union_interv": [9, 10], "union_rectangl": [4, 9], "union_rectangles_fast": [9, 10], "union_rectangles_fastest": [9, 10], "union_rectangles_na": [9, 10], "unionfind": [9, 10], "uniqu": 10, "unit": 10, "univers": [4, 10], "unreach": 10, "unweight": [4, 10], "up": [4, 9, 10], "updat": [4, 9, 10], "us": [4, 6, 7, 10], "usag": 10, "user": 4, "usr": 7, "usual": 10, "util": 10, "v": [4, 7, 10], "val": 10, "valid": [4, 10], "valu": [4, 10], "var": 10, "variabl": 10, "variant": [4, 10], "variou": [4, 5], "vector": [4, 10], "vectr": 10, "veri": 4, "verifi": 4, "versa": 4, "version": 10, "vertex": [4, 7, 10], "vertic": [4, 10], "vice": 4, "video": 0, "vie": [5, 10], "virtual": 10, "visit": [4, 10], "voelkel": 10, "vu": 10, "w": [4, 10], "wa": [4, 10], "wai": 7, "walkabl": 10, "want": [4, 7], "warn": 10, "warshal": [4, 10], "we": [4, 7, 10], "weight": [4, 7, 10], "weight_uv": 10, "well": 4, "whatev": 10, "when": [4, 10], "where": [4, 7, 10], "whether": [4, 10], "which": [4, 7, 10], "while": 7, "wiki": 10, "window": [4, 10], "windows_k_distinct": [4, 9], "wise": 4, "wish": 4, "without": [4, 10], "women": 10, "word": 10, "work": 4, "wors": 4, "worst": [4, 10], "would": [4, 7], "wrapper": 10, "write": [4, 10], "write_cycl": [9, 10], "write_graph": [9, 10], "written": 10, "www": 10, "x": [1, 4, 10], "x1": 10, "x2": 10, "x3": 10, "x_index": 10, "x_tabl": 10, "xn": 10, "y": [4, 10], "y1": 10, "y2": 10, "y_index": 10, "yet": 10, "yield": 10, "you": [4, 6, 7, 10], "your": [4, 7], "yve": 10, "z": 10, "zero": 10, "zip": [0, 1, 2], "\u00e0": 10}, "titles": ["Countdown", "Coin change", "Gallery of examples", "Computation times", "Content of the library", "Welcome to tryalgo\u2019s documentation!", "Installation", "Quick start", "Computation times", "tryalgo", "tryalgo package"], "titleterms": {"": 5, "With": 6, "a_star": 10, "algorithm": 4, "anagram": 10, "arithm": 10, "arithm_expr_ev": 10, "arithm_expr_target": 10, "arithmet": 4, "arrai": 4, "backtrack": 4, "basic": 4, "bellman_ford": 10, "bf": 10, "biconnected_compon": 10, "binary_search": 10, "bipartite_match": 10, "bipartite_vertex_cov": 10, "chang": [1, 7], "closest_point": 10, "closest_valu": 10, "coin": [1, 7], "comput": [3, 8], "content": [4, 10], "convex_hul": 10, "countdown": 0, "cycl": 4, "dancing_link": 10, "data": 4, "df": 10, "dijkstra": 10, "dilworth": 10, "dinic": 10, "dist_grid": 10, "document": 5, "dyn_prog_trick": 10, "edmonds_karp": 10, "eulerian_tour": 10, "exampl": 2, "fast_exponenti": 10, "fenwick": 10, "fft": 10, "flow": 4, "floyd_warshal": 10, "ford_fulkerson": 10, "freivald": 10, "from": 6, "gale_shaplei": 10, "galleri": 2, "gauss_jordan": 10, "geometri": 4, "graph": [4, 10], "graph01": 10, "hamiltonian_cycl": 10, "horn_sat": 10, "huffman": 10, "instal": 6, "interv": 4, "interval_cov": 10, "interval_tre": 10, "intervals_union": 10, "karatsuba": 10, "knapsack": 10, "knuth_morris_pratt": 10, "kruskal": 10, "kuhn_munkr": 10, "kuhn_munkres_n4": 10, "laser_mirror": 10, "last": 4, "left_right_invers": 10, "levenshtein": 10, "librari": 4, "longest": 7, "longest_common_subsequ": 10, "longest_increasing_subsequ": 10, "lowest_common_ancestor": 10, "major": 10, "manach": 10, "match": 4, "matrix_chain_mult": 10, "max_interval_intersec": 10, "merge_ordered_list": 10, "min_mean_cycl": 10, "modul": 10, "next_permut": 10, "our_heap": 10, "our_queu": 10, "our_std": 10, "packag": 10, "palindrom": 7, "pareto": 10, "partition_refin": 10, "path": 4, "pathfind": 7, "pc_tree": 10, "permutation_rank": 10, "pip": 6, "polygon": 10, "predictive_text": 10, "prime": 10, "pypi": 6, "quick": 7, "rabin_karp": 10, "range_minimum_queri": 10, "rectangles_from_grid": 10, "rectangles_from_histogram": 10, "rectangles_from_point": 10, "relat": 4, "roman_numb": 10, "scalar": 10, "sequenc": [4, 10], "set": 4, "shortest": 4, "shortest_cycl": 10, "skip_list": 10, "start": 7, "string": [4, 7], "strongly_connected_compon": 10, "structur": 4, "submodul": 10, "subsetsum": 10, "subsetsum_divid": 10, "substr": 7, "sudoku": 10, "suffix_arrai": 10, "three_partit": 10, "time": [3, 8], "topological_ord": 10, "tortoise_har": 10, "tree": 4, "trie": 10, "tryalgo": [5, 9, 10], "two_sat": 10, "union_rectangl": 10, "welcom": 5, "windows_k_distinct": 10, "word": 4}})